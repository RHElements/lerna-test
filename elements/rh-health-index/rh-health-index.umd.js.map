{"version":3,"file":"rh-health-index.umd.js","sources":["rh-health-index.umd.js"],"sourcesContent":["/*\n * Copyright 2018 Red Hat, Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport RHElement from \"../rhelement/rhelement.umd\";\n\nclass RhHealthIndex extends RHElement {\n  get html() {\n    return `\n<style>\n:host {\n  display: inline-flex;\n  align-items: center; }\n\n:host([hidden]) {\n  display: none; }\n\n.box-container {\n  display: flex;\n  border: 1px solid var(--rh-theme--color--surface--border, #dfdfdf);\n  margin-left: calc(var(--rh-theme--container-spacer, 1rem) * 0.5); }\n  .box-container .box {\n    background: #fff;\n    width: 10px;\n    height: 20px;\n    border-right: 1px solid var(--rh-theme--color--surface--border, #dfdfdf); }\n    .box-container .box:last-child {\n      border-right: 0; }\n    .box-container .box.active.a {\n      background-color: #3f9c35; }\n    .box-container .box.active.b {\n      background-color: #92d400; }\n    .box-container .box.active.c {\n      background-color: #efaa00; }\n    .box-container .box.active.d {\n      background-color: #ec7a08; }\n    .box-container .box.active.e {\n      background-color: #cc0000; }\n    .box-container .box.active.f {\n      background-color: #a30000; }\n</style>\n<div id=\"healthIndex\"></div>\n<div class=\"box-container\">\n  <div class=\"box a\"></div>\n  <div class=\"box b\"></div>\n  <div class=\"box c\"></div>\n  <div class=\"box d\"></div>\n  <div class=\"box e\"></div>\n  <div class=\"box f\"></div>\n</div>`;\n  }\n\n  static get tag() {\n    return \"rh-health-index\";\n  }\n\n  get templateUrl() {\n    return \"rh-health-index.html\";\n  }\n\n  get styleUrl() {\n    return \"rh-health-index.scss\";\n  }\n\n  static get observedAttributes() {\n    return [\"health-index\"];\n  }\n\n  constructor() {\n    super(RhHealthIndex.tag);\n  }\n\n  attributeChangedCallback(attr, oldValue, newValue) {\n    const healthIndex = newValue.toLowerCase();\n    const healthIndexUpperCase = newValue.toUpperCase();\n    const boxes = [...this.shadowRoot.querySelectorAll(\".box\")];\n\n    this.innerHTML = healthIndexUpperCase;\n    this.shadowRoot.querySelector(\n      \"#healthIndex\"\n    ).innerText = healthIndexUpperCase;\n\n    boxes.forEach(box => {\n      if (box.classList.contains(healthIndex)) {\n        box.classList.add(\"active\");\n      } else {\n        box.classList.remove(\"active\");\n      }\n    });\n\n    if (!this.shadowRoot.querySelector(\".box.active\")) {\n      console.warn(\n        `${\n          RhHealthIndex.tag\n        }: a valid health-index was not provided. Please use A, B, C, D, E, or F`\n      );\n    }\n  }\n}\n\nRHElement.create(RhHealthIndex);\n\nexport default RhHealthIndex;\n"],"names":["RhHealthIndex","tag","RHElement","attr","oldValue","newValue","healthIndex","toLowerCase","healthIndexUpperCase","toUpperCase","boxes","this","shadowRoot","querySelectorAll","innerHTML","querySelector","innerText","forEach","box","classList","contains","add","remove","warn","create"],"mappings":"+iBAwBMA,gWA+DIA,EAAcC,yUA/DIC,ywCAmDjB,8DAIA,2DARA,mEAYA,CAAC,wEAOeC,EAAMC,EAAUC,OACjCC,EAAcD,EAASE,cACvBC,EAAuBH,EAASI,cAChCC,mIAAYC,KAAKC,WAAWC,iBAAiB,eAE9CC,UAAYN,OACZI,WAAWG,cACd,gBACAC,UAAYR,IAERS,QAAQ,YACRC,EAAIC,UAAUC,SAASd,KACrBa,UAAUE,IAAI,YAEdF,UAAUG,OAAO,YAIpBX,KAAKC,WAAWG,cAAc,wBACzBQ,KAEJvB,EAAcC,+FAOxBC,EAAUsB,OAAOxB"}