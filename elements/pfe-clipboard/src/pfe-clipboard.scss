// Please see the pfe-sass README for guidance on using these tools
@import "../../pfe-sass/pfe-sass";

$LOCAL: clipboard;

// This variable is global so that helper functions can reference it
$LOCAL-VARIABLES: (
  FontSize: 1rem,
  FontWeight: pfe-var(font-weight--light),
  Color: pfe-broadcasted(link),
  Color--hover: pfe-broadcasted(link--hover),
  Color--focus: pfe-broadcasted(link--focus),
  text--success--Color: pfe-var(feedback--success),
  icon--Width: 16px,
  icon--Height: auto,
);

:host {
  display: flex;
  flex: 0 0 auto;
  align-items: center;
  max-width: fit-content;
  color: pfe-local(Color) !important;
  font-weight: pfe-local(FontWeight);
  cursor: pointer;
  // @todo: How should we handle padding with inline elements?
  padding: 6px 16px;
}

:host([hidden]) {
  display: none;
}

//-- Custom styles applied to slot's shadow element
.pfe-clipboard {
  &__icon {
    display: flex;
    width: pfe-local(icon--Width);
    // This is needed if the icon isn't square
    height: pfe-local(icon--Height);
    margin-right: 0.4825rem; // 7.72px 
  }
  &__text {
    font-size: pfe-local(FontSize) !important;
    color: pfe-local(Color) !important;
  }

  &__text--success {
    color: pfe-local(text--success--Color) !important;
  }
}

// Flipped clipboard text and success text
:host(:not([copied])) .pfe-clipboard__text,
.pfe-clipboard:not([copied]) .pfe-clipboard__text {
  display: block;
}
:host([copied]) .pfe-clipboard__text,
.pfe-clipboard[copied] .pfe-clipboard__text {
  display: none;
}
:host(:not([copied])) .pfe-clipboard__text--success,
.pfe-clipboard:not([copied]) .pfe-clipboard__text--success {
  display: none;
}
:host([copied]) .pfe-clipboard__text--success,
.pfe-clipboard[copied] .pfe-clipboard__text--success {
  display: block;
}

//-- Custom styles applied to slot
// Targets icon in the shadowdom and lightdom
::slotted([slot="icon"]),
.pfe-clipboard__icon > * {
  width: 100%;
}

/// ===========================================================================
/// CTA STATES: HOVER, FOCUS
/// ===========================================================================

// Note: Focus states need to be defined before hover states
:host(:not([aria-disabled="true"]):focus),
:host(:not([aria-disabled="true"]).focus-within) {
  @include pfe-print-local((
    Color: pfe-local(Color--focus),
  ));
}

// Note: Hover states need to be defined after focus states
:host(:not([aria-disabled="true"]):hover),
:host(:not([aria-disabled="true"])) ::slotted(:hover) {
  @include pfe-print-local((
    Color: pfe-local(Color--hover),
  ));
}

@include browser-query(ie11) {
  :host {
    // fallback for inline-flex
    display: inline-block;
  }
  .pfe-clipboard__icon {
    display: inline-block;
    margin-right: 0;
  }
  .pfe-clipboard__text {
    display: inline-block;
  }
}
