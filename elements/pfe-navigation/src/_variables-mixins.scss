// Please see the pfe-sass README for guidance on using these tools
@import "../../pfe-sass/pfe-sass";

$LOCAL: navigation;

/// PFE-Local setup variables
/// These variables will be namespaced and become css vars
$LOCAL-VARIABLES: (
  menu-height: 72px,
  gutter: 32px,
  dropdown-transition: none, // height 0.25s ease-in-out,
  accordion-transition: height 0.25s ease-in-out,
  content-max-width: 1136px, // Grabbed from redhat.com prod, it was a calculated value that won't work in pfe-navigation 2.x
);

/// Breakpoints
/// secondary-links-expand and nav-expand are functional breakpoints
/// Their value should match an existing breakpoint, and be above the breakpoint they're matching
$breakpoints: (
  sm:  576px,
  secondary-links-expand: 768px, // The place where secondary links *could* expand, JS breakpoints may catch that there isn't enough room
  md:  768px,
  lg:  992px,
  nav-expand: 1200px,// Where the nav *could* expand, JS breakpoints may catch that there isn't enough room
  xl:  1200px,
  2xl: 1368px,
);

$dropdown-transition: height 0.25s ease-in-out;
$menu-height: pfe-local(menu-height);

$gutter: pfe-local(gutter);

/// Breakpoint helper specific to pfe-navigation
/// @param {string} $breakpoint Name of a breakpoint
/// @see $breakpoints
@mixin breakpoint($breakpoint) {
  @media (min-width: #{map-get($breakpoints, $breakpoint)}) {
    @content;
  }
}

/// JS triggered 'breakpoints' if there isn't room for a section a class is added to collapse it
/// Styles in collapse should undo _desktop layout changes_ that the related breakpoint makes.
/// @example
///   pfe-navigation {
///     display: block;
///     margin: 10px 0 0;
///     @include breakpoint('nav-expand') {
///       display: flex;
///       margin: 20px 40px;
///     }
///     @include collapse(nav) {
///       display: block;
///       margin: 10px 0 0;
///     }
///   }
/// @param {string} $section Can be 'nav' or 'secondary-links'
@mixin collapse($section) {
  @if $section == 'nav' {
    :host(.pfe-navigation--collapse-main-menu) & {
      @content;
    }
  }
  @else if $section == 'secondary-links' {
    :host(.pfe-navigation--collapse-secondary-links) & {
      @content;
    }
  }
}

/// sr-only class (same as Bootstrap 4 sr-only class)
/// hide element from everyone except screen readers
@mixin sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0,0,0,0);
  white-space: nowrap;
  border: 0;
}

/// sr-only class
/// can be used in shadow DOM and light DOM stylesheets
// @todo: add note to docs to recommend content editors and devs use this class version when they need to make something only available to screen readers. The Drupal classes are a fallback for compatibility with Drupal content.
.sr-only {
  @include sr-only;
}

/// Drupal 7 & 8 class version of sr-only class
/// can be used in shadow DOM and light DOM stylesheets
.visually-hidden,
.element-invisible {
  @include sr-only;
}

/// Focus indicator styles specific to pfe-navigation
/// @param {string} $border-color Color of dashed border (white or black depending on bg-color)
/// @param {string} $border-top-size Size of border-top (0px or 1px depending on which navigation main/mega menu)
@mixin focus-styles($border-color, $border-top-size) {
  border: 1px dashed $border-color;
  border-top: $border-top-size dashed $border-color;
  border-radius: 0;
  outline: 0;
}

/// Focus indicator styles specific to pfe-navigation, alternative option for elements with box-shadow bar at the top
/// @param {string} $border-color Color of dashed border (white or black depending on bg-color)
/// @param {string} $box-shadow-color Color of box-shadow indicator (red or black depending on the button bg-color, border-top always needs to be the same color as the box-shadow)
/// @param {boolean} $show-border-top Whether not the top border should be shown
@mixin alt-focus-styles($border-color, $box-shadow-color, $show-border-top: false) {
  &:after {
    content: '';
    position: absolute;
    right: 0;
    bottom: 0;
    top: 0;
    left:0;
    display: block;
    border: 1px dashed $border-color;
    border-radius: 0;
    @if not $show-border-top {
      border-top: none;
    }
    outline: 0;
  }
}

//
// Light DOM & Shadow DOM shared styles
// --------------------------------------------------------
@mixin pfe-navigation__wrapper {
  position: relative;
  z-index: 100;
  display: flex;
  align-items: stretch;
  height: $menu-height;
  font-size: 16px;
  line-height: 1.5;
  font-family: "RedHatText", "Red Hat Text", Overpass, Arial, Helvetica, sans-serif;
  color: #fff;
  background: #151515;
}
@mixin pfe-navigation__wrapper--mobile {
  max-width: 9999em;
  margin: 0 0 8px;
  padding: 0 16px;
}
@mixin pfe-navigation__wrapper--collapsed-menu {
  max-width: 9999em;
  margin: 0;
  padding: 0 16px;
}
@mixin pfe-navigation__wrapper--desktop {
  margin: 0 auto;
  padding: 0 32px;
}

@mixin pfe-navigation__logo-wrapper {
  display: flex;
  align-items: center;
  justify-content: flex-start;
  margin: 0;
  padding: 10px 16px 10px 0;
}

@mixin pfe-navigation__logo-link {
  position: relative;
  display: block;
  padding: 6px 8px;
  margin-left: -8px; // Should be flush left with container
  outline: none;
  border-radius: 3px;

  // avoid jumpiness from focus/hover styles
  border: 1px solid transparent;

  // focus styles
  &:focus {
    @include focus-styles(#fff, 1px);
  }
}

@mixin pfe-navigation__logo-image {
  display: block;
  width: auto;
  height: 40px;

  // In case there isn't a mobile and desktop version
  &:only-child {
    display: block;
  }

  &.pfe-navigation__logo-image--small {
    height: 32px;
  }
}


@mixin secondary-links-icon {
  --pfe-icon--Color: currentColor;
  // @todo: do we need to implement this differently with theming?
  --pfe-icon--size: 18px;
  // @todo: figure out best spacing styles for this icon
  padding-right: 5px;
  padding-bottom: 0px;
  @include breakpoint('secondary-links-expand') {
    padding-right: 0px;
    padding-bottom: 5px;
  }
  @include breakpoint('secondary-links-expand') {
    padding-right: 5px;
    padding-bottom: 0px;
  }
}

@mixin secondary-links-icon--in-black-bar {
  position: absolute;
  top: calc(50% - 11px); // 11px is  half of line-height of text + bottom padding
  left: 50%;
  padding: 0;
  transform: translate(-50%, -50%);
}

@mixin secondary-links-icon--in-mobile-dropdown {
  position: static;
  transform: none;
}

/// Top level button styles
/// @param {string} $menu-name Name of the menu dropdown is in (nav or secondary-links)
@mixin top-level-button($menu-name: 'secondary-links') {
  $padding-mobile: 8px 24px;
  position: relative;
  display: flex;
  align-items: center;
  width: 100%;
  margin: 0;
  padding: $padding-mobile;
  border: 0;
  white-space: nowrap;
  font-family: inherit;
  font-size: 16px;
  color: #06c;
  text-align: center;
  text-decoration: none;
  background: transparent;
  outline: none;
  appearance: none;
  cursor: pointer;

  @if $menu-name == 'secondary-links' {
    @include breakpoint(#{$menu-name + '-expand'}) {
      flex-direction: column;
      justify-content: flex-end;
      width: auto;
      height: $menu-height;
      padding: 14px 8px;
      font-size: 12px;
      color: #fff;
    }
    @include collapse($menu-name) {
      flex-direction: row;
      justify-content: normal;
      width: 100%;
      height: auto;
      padding: $padding-mobile;
      font-size: 16px;
      color: #06c;
    }
  }

  &:hover,
  &:focus {
    box-shadow: inset 4px 0 0 0 #e00;
    @include breakpoint(#{$menu-name + '-expand'}) {
      box-shadow: inset 0 4px 0 0 #e00;
    }
    @include collapse($menu-name) {
      box-shadow: inset 4px 0 0 0 #e00;
    }
  }

  // focus styles
  &:focus {
    @include alt-focus-styles(#000, #e00, true);

    @include breakpoint(#{$menu-name + '-expand'}) {
      @include alt-focus-styles(#fff, #e00);
    }
    @include collapse('secondary-nav') {
      @include alt-focus-styles(#000, #e00, true);
    }
  }

  @if $menu-name == 'secondary-links' {
    &[pfe-navigation-open-toggle="main-menu--open"] {
      &:focus {
        @include focus-styles(#000, 1px);
        @include breakpoint(#{$menu-name + '-expand'}) {
          &:after {
            content: none;
          }
        }
        @include collapse($menu-name) {
          @include focus-styles(#000, 1px);
        }
      }
    }

    pfe-icon {
      @include secondary-links-icon;
      @include breakpoint(#{$menu-name + '-expand'}) {
        @include secondary-links-icon--in-black-bar;
      }
      @include collapse($menu-name) {
        @include secondary-links-icon--in-mobile-dropdown;
      }
    }
  }

  pfe-icon {
    @include secondary-links-icon;
  }
}

@mixin top-level-button--stays-in-top-bar {
  flex-direction: column;
  justify-content: flex-end;
  width: auto;
  margin-right: 8px;
  padding: 14px 8px;
  font-size: 12px;
  color: #fff;

  &[class]:focus,
  &[class]:hover {
    box-shadow: inset 0 4px 0 0 #e00;
  }

  pfe-icon {
    @include secondary-links-icon--in-black-bar;
  }
}

@mixin secondary-links-li {
  display: block;
  width: auto;
  height: auto;
  margin: 0 0 8px;
  padding: 0;
  list-style: none;
  @include breakpoint('secondary-links-expand') {
    margin: 0 8px 0 0;
  }
  @include collapse('secondary-links') {
    margin: 0 0 8px;
  }
}

/// Provides styles for a single column dropdown
/// @param {string} $menu-name Name of the menu dropdown is in (nav or secondary-links)
@mixin single-column-dropdown($menu-name: nav) {
  // Desired padding plus negative margin on columns
  padding: 0 #{24px + 16px};
  @include breakpoint(#{$menu-name'-expand'}) {
    position: absolute;
    top: 100%;
    max-width: 100%;
    min-width: 13em; // Trying to make sure it's larger than the top level menu link
    // Desired padding plus negative margin on columns
    padding: 0 #{16px + 16px};
    box-shadow:
      var(
        --pfe-theme--box-shadow--sm,
        0 0.0625rem 0.125rem 0 rgba(19, 19, 19, 0.2)
      );
  }
  @include collapse($menu-name) {
    position: static;
    max-width: 100%;
    box-shadow: none;
  }
}
