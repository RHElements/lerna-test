@import "../../pfe-sass/pfe-sass";

$LOCAL: navigation-item;

:host {
  --pfe-navigation-item--Color: #{pfe-color(text--on-dark)};
  --pfe-navigation-item--BackgroundColor: #{pfe-color(surface--darkest)};
  --pfe-navigation-item--BorderTopColor: transparent;
  --pfe-navigation-item--BorderColor: transparent;
  --pfe-navigation-item--Padding--horizontal: #{pfe-var(container-padding)};
  --pfe-navigation-item__tray--Padding: #{pfe-var(container-padding)};

  --pfe-navigation-item__icon--Background: none;
  
  @media screen and (min-width: pfe-breakpoint(lg)) {
    --pfe-navigation-item--Padding--horizontal: calc(#{pfe-var(container-padding)} / 2);
    --pfe-navigation-item__tray--Padding: calc(#{pfe-var(container-padding)} * 2);
  }

  @media screen and (min-width: pfe-breakpoint(xl)) {
    --pfe-navigation-item--Padding--horizontal: #{pfe-var(container-padding)};
  }

  height: 100%;
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
  justify-content: center;
}

:host([pfe-icon]) {
  display: flex;
}

:host(:not([pfe-icon="menu"]):not([pfe-icon="bento"])) {
  display: none;
  @media screen and (min-width: pfe-breakpoint(sm)) {
    display: flex;
  }
}

@each $icon in (bento, user, globe, search, menu) {
  :host([pfe-icon="#{$icon}"]) {
    --pfe-navigation-item__icon--Background: #{map-get($icons, #{$icon}--on-dark)} no-repeat;
  }
  :host([pfe-icon="#{$icon}"].expanded) .pfe-navigation-item__trigger {
    --pfe-navigation-item__icon--Background: #{map-get($icons, #{$icon})} no-repeat;
  }
}

:host([hidden]),
::slotted([slot="tray"][hidden]) {
  display: none;
  visibility: hidden;
}

// Making the trigger styles an extend to optimize the css output below
%trigger-styles {
  font-family: #{pfe-var(font-family)};
  text-align: center;
  font-size: 14px;
  font-weight: 100;
  margin: 0;
  white-space: nowrap;
  color: #{pfe-local(Color)};
  a {
    cursor: pointer;
    text-decoration: none;
    color: inherit;
    outline: none;
  }
  :host([pfe-icon]) & {
    font-size: 12px;
  }
}

#pfe-navigation-item--trigger {
  @for $n from 1 through 6 {
    h#{$n} {
      @extend %trigger-styles;
    }
  }
}

::slotted([slot="tray"]) {
  padding: var(--pfe-navigation-item__tray--Padding);
  max-height: calc(100vh - var(--pfe-navigation--Height, 90px));
  overflow-x: hidden;
  overflow-y: scroll;
}

.pfe-navigation-item {
  &__icon {
    display: flex;
    background: var(--pfe-navigation-item__icon--Background);

    :host(:not([pfe-icon])) [aria-expanded="false"] & {
      visibility: hidden;
    }

    :host(:not([pfe-icon])) & {
      @include pfe-arrow(down, #{pfe-var(feedback--default--lightest)}, $width: 6px, $height: 6px);
      position: absolute;
      bottom: 13px;
    }

    :host([pfe-icon]) & {
      margin-bottom: calc(#{pfe-var(container-spacer)} / 2);
      width: 1.3em;
      height: 1.3em;
    }
  }
  &__trigger {
    --pfe-theme--link--text-decoration: none;
    --pfe-theme--link--text-decoration--hover: none;
    --pfe-theme--link--text-decoration--focus: none;

    --pfe-broadcasted--color--ui-link:          #{pfe-local(Color)};
    --pfe-broadcasted--color--ui-link--hover:   #{pfe-local(Color)};
    --pfe-broadcasted--color--ui-link--visited: #{pfe-local(Color)};
    --pfe-broadcasted--color--ui-link--focus:   #{pfe-local(Color)};

    transition: all #{pfe-var(animation-timing)};

    position: relative;

    display: flex;
    flex-flow: column nowrap;
    align-items: center;
    justify-content: center;
    flex-grow: 1;

    background-color: #{pfe-local(BackgroundColor)};
    padding: var(--pfe-navigation--Padding--vertical) var(--pfe-navigation-item--Padding--horizontal) !important;

    border-top: #{pfe-var(surface--border-width--heavy)} #{pfe-var(surface--border-style)} #{pfe-local(BorderTopColor)};
    border-right: #{pfe-var(surface--border-width)} dashed #{pfe-local(BorderColor)};
    border-bottom: #{pfe-var(surface--border-width)} dashed #{pfe-local(BorderColor)};
    border-left: #{pfe-var(surface--border-width)} dashed #{pfe-local(BorderColor)};
    color: #{pfe-local(Color)};

    &:hover,
    :host([aria-current="location"]) {
      --pfe-navigation-item--BorderTopColor:  #{pfe-color(surface--accent)};
    }

    &:focus,
    :host(:focus-within) & {
      --pfe-navigation-item--BorderTopColor:  #{pfe-color(surface--accent)};
      --pfe-navigation-item--BorderColor: #{pfe-color(surface--lightest)};
    }

    &[aria-expanded="true"],
    .expanded & {
      --pfe-navigation-item--Color: #{pfe-color(text)};
      --pfe-navigation-item--BackgroundColor: #{pfe-color(surface--lightest)};
      --pfe-navigation-item--BorderTopColor:  #{pfe-color(surface--accent)};
    }

    &:focus:not(:focus-visible) {
      outline: none;  // removes outline for mouse users, preserves it for keyboard users
    }
  }
  &__tray {
    width: 100%;
    margin: 0 auto;
  
    transition: all #{pfe-var(animation-timing)};
    background-color: #{pfe-color(surface--lightest)};
  
    display: block;
    position: absolute;
    top: 100%;
    left: 0;
    z-index: 1;
    color: #{pfe-color(surface--lightest--text)};
  }
}
