@import "../../pfe-sass/pfe-sass";

$LOCAL: navigation;

:host {
  --pfe-navigation__overlay--BackgroundColor: var(--pfe-theme--overlay--BackgroundColor, rgba(37, 37, 37, 0.5));

  // Default spacing values
  --pfe-navigation--Padding--vertical: #{pfe-var(container-padding)};
  --pfe-navigation--Padding--horizontal: #{pfe-var(container-padding)};

  --pfe-navigation--Padding: 0 #{pfe-local(Padding--horizontal)};

  // Darkest is the default background color
  --pfe-navigation--BackgroundColor: #{pfe-color(surface--darkest)};
  --pfe-navigation--Color: #{pfe-color(surface--darkest--text)};
  --pfe-navigation--Border: #{pfe-var(surface--border-width)} #{pfe-var(surface--border-style)} transparent;
  --pfe-navigation--MinHeight: 72px;

  // Variables for the border
  --pfe-navigation--BorderTopColor: transparent;
  --pfe-navigation--BorderColor: transparent;

  // Variables for the trigger region
  --pfe-navigation__trigger--FontSize: 16px;
  --pfe-navigation__trigger--FontWeight: 100;
  
  // Variables for the trigger icons
  --pfe-navigation--icon: none;

  // Variables for the tray region
  --pfe-navigation__tray--Padding: #{pfe-var(container-padding)};

  // Reduce padding for print
  @media print {
    --pfe-navigation--Padding: calc(#{pfe-local(Padding--vertical)} / 2) #{pfe-local(Padding--horizontal)};
  }

  // Increase horizontal padding for above mobile breakpoints
  @media screen and (min-width: pfe-breakpoint(sm)) {
    --pfe-navigation--Padding--horizontal: calc(#{pfe-var(container-padding)} * 2);
  }

  // Reduce horizontal padding at large breakpoint
  @media screen and (min-width: pfe-breakpoint(lg)) {
    --pfe-navigation--Padding--horizontal: calc(#{pfe-var(container-padding)} / 2);
    --pfe-navigation__tray--Padding: calc(#{pfe-var(container-padding)} * 2);
  }

  // Increase horizontal padding at xl breakpoint
  @media screen and (min-width: pfe-breakpoint(xl)) {
    --pfe-navigation--Padding--horizontal: #{pfe-var(container-padding)};
  }

  display: block;
  z-index: #{pfe-var($cssvar: content, $map: $z-index)};
  width: 100%;
}

:host(.sticky) {
  position: sticky;
  top: 0;
  left: 0;
  width: 100vw;
  z-index: #{pfe-var($cssvar: navigation, $map: $z-index)};
}

// Note: These styles do not pick up in Edge
::slotted([slot="logo"]) {
  margin: 0 !important;
  max-height: #{pfe-local(MinHeight)};
}

::slotted([slot="mobile-login"]),
::slotted([slot="mobile-language"]) {
  color: var(--pfe-broadcasted--color--ui-link, #{pfe-color(ui-link)});
  text-decoration: var(--pfe-broadcasted--link--text-decoration, #{pfe-var(link--text-decoration)});
}

::slotted([slot="mobile-menu--label"]),
.pfe-navigation__main--menu-label {
  @each $prop in (text-decoration, text-decoration--hover, text-decoration--focus) {
    --pfe-theme--link--#{$prop}: none;
  }

  @each $prop in (text, ui-link, ui-link--hover, ui-link--visited, ui-link--focus) {
    --pfe-broadcasted--color--#{$prop}: #{pfe-local(Color)};
  }

  // Enforce the font-size for the navigation regardless of h-level settings
  @each $level in (alpha, beta, gamma) {
    --pfe-theme--font-size--#{$level}:   14px;
    --pfe-theme--font-weight--#{$level}: 100;
  }

  font-family: #{pfe-var(font-family)};
  text-align:  center;
  font-size:   14px;
  font-weight: 100;
  color: #{pfe-local(Color)};
  white-space: nowrap;
  margin-bottom: 0;
}

@each $icon in (bento, user, globe, search, menu) {
  [pfe-icon="#{$icon}"],
  ::slotted([pfe-icon="#{$icon}"]) {
    --pfe-navigation--icon: #{map-get($icons, #{$icon}--on-dark)};
  }
  [pfe-icon="#{$icon}"].expanded,
  ::slotted([pfe-icon="#{$icon}"].expanded) {
    --pfe-navigation--icon: #{map-get($icons, #{$icon})};
  }
}

.pfe-navigation {
  &__wrapper {
    position: relative;
    z-index: #{pfe-var($cssvar: navigation, $map: $z-index)};
    
    background-color: #{map-get($pfe-colors, surface--darkest)};
    background-color: #{pfe-local(BackgroundColor)};
    color: #{pfe-local(Color)};
    min-height: #{pfe-local(MinHeight)};
  }
  &__container {
    margin: 0 auto;
    padding: 0 #{pfe-local(Padding--horizontal)};

    display: flex;
    flex-flow: row nowrap;
    align-items: stretch;
    justify-content: space-between;

    // Loop through the other breakpoints
    @each $size in (md, lg, xl) {
      @media screen and (min-width: pfe-breakpoint(#{$size})) {
        // Set the variable for use in the tray region too
        --pfe-navigation--Width: calc(#{pfe-breakpoint(#{$size})} - calc(#{pfe-local(Padding--horizontal)} * 2));

        width: calc(#{pfe-breakpoint(#{$size})} - 2rem); // IE11 fallback
        width: #{pfe-local(Width)};
      }
    }

    @media (min-width: #{pfe-breakpoint(lg)}) {
      padding: 0;
    }
  }
  &__overlay {
    display: block;
    background-color: var(--pfe-navigation__overlay--BackgroundColor);
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    z-index: #{pfe-var($cssvar: overlay, $category: 'zindex', $map: $z-index)};
    &[hidden] {
      display: none;
    }
  }
  &__logo {
    display: flex;
    flex-flow: column nowrap;
    align-items: flex-start;
    justify-content: center;
    
    padding-top: #{pfe-local(Padding--vertical)};
    padding-right: #{pfe-var(container-padding)};
    padding-bottom: #{pfe-local(Padding--vertical)};
  }
  &__skip {
    @include pfe-sr-only;
  }
  &__main {
    flex-grow: 1;
    display: flex;
    justify-content: flex-end;
    // @media (min-width: #{pfe-breakpoint(lg)}) {
    //   flex-grow: 1;
    //   flex-flow: row nowrap;
    //   align-items: stretch;
    //   justify-content: flex-start;
    // }
    &--mobile {
      display: grid;
      grid-gap: #{pfe-var(container-spacer)};
      &--columns {
        display: grid;
        grid-gap: #{pfe-var(container-spacer)};
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
      }
    }
  }
  &__utility {
    display: flex;
    flex-flow: row nowrap;
    align-items: stretch;
    justify-content: flex-end;
    ::slotted(:not([name="site-switcher"])) {
      @media (max-width: #{pfe-breakpoint(lg, $max: true)}) {
        display: none;
      }
    }
  }
}
