@import "../../pfe-sass/pfe-sass";

$LOCAL: navigation;

:host {
  --pfe-navigation__overlay--BackgroundColor: var(--pfe-theme--overlay--BackgroundColor, rgba(37, 37, 37, 0.5));

  // Default spacing values
  --pfe-navigation--Padding--vertical: #{pfe-var(container-padding)};
  --pfe-navigation--Padding--horizontal: #{pfe-var(container-padding)};

  --pfe-navigation--Padding: 0 #{pfe-local(Padding--horizontal)};

  // Darkest is the default background color
  --pfe-navigation--BackgroundColor: #{pfe-color(surface--darkest)};
  --pfe-navigation--Color: #{pfe-color(surface--darkest--text)};
  --pfe-navigation--Border: #{pfe-var(surface--border-width)} #{pfe-var(surface--border-style)} transparent;
  --pfe-navigation--MinHeight: 72px;

  // Reduce padding for print
  @media print {
    --pfe-navigation--Padding: calc(#{pfe-local(Padding--vertical)} / 2) #{pfe-local(Padding--horizontal)};
  }

  @media screen and (min-width: pfe-breakpoint(sm)) {
    --pfe-navigation--Padding--horizontal: calc(#{pfe-var(container-padding)} * 2);
  }

  display: block;
  z-index: #{pfe-var($cssvar: content, $map: $z-index)};
  width: 100%;
}

:host(.sticky) {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  z-index: #{pfe-var($cssvar: navigation, $map: $z-index)};
}

// Note: These styles do not pick up in Edge
::slotted([slot="logo"]) {
  margin: 0 !important;
  max-height: #{pfe-local(MinHeight)};
}

::slotted([slot="mobile-login"]),
::slotted([slot="mobile-language"]) {
  color: var(--pfe-broadcasted--color--ui-link, #{pfe-color(ui-link)});
  text-decoration: var(--pfe-broadcasted--link--text-decoration, #{pfe-var(link--text-decoration)});
}

@each $icon in (user, globe) {
  ::slotted([icon="#{$icon}"]) {
    --pfe-navigation__icon--Background: #{map-get($icons, #{$icon})} no-repeat;
  }
}

.pfe-navigation {
  &__wrapper {
    position: relative;
    z-index: #{pfe-var($cssvar: navigation, $map: $z-index)};
    
    background-color: #{map-get($pfe-colors, surface--darkest)};
    background-color: #{pfe-local(BackgroundColor)};
    color: #{pfe-local(Color)};
    min-height: #{pfe-local(MinHeight)};
  }
  &__container {
    margin: 0 auto;
    padding: 0 #{pfe-local(Padding--horizontal)};

    display: flex;
    flex-flow: row nowrap;
    align-items: stretch;
    justify-content: space-between;

    // Loop through the other breakpoints
    @each $size in (md, lg, xl) {
      @media screen and (min-width: pfe-breakpoint(#{$size})) {
        // Set the variable for use in the tray region too
        --pfe-navigation--Width: calc(#{pfe-breakpoint(#{$size})} - calc(#{pfe-local(Padding--horizontal)} * 2));

        width: calc(#{pfe-breakpoint(#{$size})} - 2rem); // IE11 fallback
        width: #{pfe-local(Width)};
      }
    }

    @media (min-width: #{pfe-breakpoint(lg)}) {
      padding: 0;
    }
  }
  &__overlay {
    display: block;
    background-color: var(--pfe-navigation__overlay--BackgroundColor);
    position: absolute;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    z-index: #{pfe-var($cssvar: overlay, $category: 'zindex', $map: $z-index)};
    &[hidden] {
      display: none;
    }
  }
  &__logo {
    display: flex;
    flex-flow: column nowrap;
    align-items: flex-start;
    justify-content: center;
    
    padding-top: #{pfe-local(Padding--vertical)};
    padding-right: #{pfe-var(container-padding)};
    padding-bottom: #{pfe-local(Padding--vertical)};
  }
  &__skip {
    @include pfe-sr-only;
  }
  &__main {
    display: none;
    @media (min-width: #{pfe-breakpoint(lg)}) {
      flex-grow: 1;
      display: flex;
      flex-flow: row nowrap;
      align-items: stretch;
      justify-content: flex-start;
    }
  }
  &__utility {
    display: flex;
    flex-flow: row nowrap;
    align-items: stretch;
    justify-content: flex-end;
    > [icon="menu"] {
      @media (min-width: #{pfe-breakpoint(lg)}) {
        display: none;
      }
    }
    &-links {
      &:not([id$="site-switcher"]) {
        @media (max-width: #{pfe-breakpoint(lg, $max: true)}) {
          display: none;
        }
      }
    }
    &--mobile {
      display: grid;
      grid-gap: #{pfe-var(container-spacer)};
      &--top {
        @media screen and (min-width: pfe-breakpoint(sm)) {
          display: none;
        }
      }
      &--columns {
        display: flex;
        flex-flow: row nowrap;
        padding: calc(#{pfe-var(container-spacer)} * 2) 0;
        @media screen and (min-width: pfe-breakpoint(sm)) {
          display: none;
        }
      }
      &--item {
        display: flex;
        flex-flow: row nowrap;
        align-items: center;
        text-decoration: none;
        color: var(--pfe-broadcasted--color--ui-link, #{pfe-color(ui-link)});
        stroke: var(--pfe-broadcasted--color--ui-link, #{pfe-color(ui-link)});
        &:not(:last-child) {
          margin-right: calc(#{pfe-var(container-spacer)} * 2.5);
        }
        @each $state in (hover, focus, visited) {
          &:#{$state} {
            color: var(--pfe-broadcasted--color--ui-link--#{$state}, #{pfe-color(ui-link--#{$state})});
            stroke: var(--pfe-broadcasted--color--ui-link--#{$state}, #{pfe-color(ui-link--#{$state})});
          }
        }
      }
      &--icon {
        display: inline-block;
        width: 1em;
        height: 1em;
        margin-right: #{pfe-var(container-spacer)};
      }
    }
  }
}
