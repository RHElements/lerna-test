@import "../../pfe-sass/pfe-sass";

$LOCAL: tabs;

$LOCAL-VARIABLES: (
  BackgroundColor:           transparent,
  BackgroundColor--inactive: pfe-var(surface--lighter),
  Color:                     pfe-var(text--muted),
  BorderColor--hover:        $pf-color-black-400, 
  BorderWidth:               pfe-var(ui--border-width--active),
  tab: ( // to avoid collisions with panel
    FontSize:                pfe-var(font-size),
    Margin:                  0 0 calc( #{pfe-var(ui--border-width)} * -1),
    PaddingTop:              pfe-var(container-padding),
    PaddingBottom:           pfe-var(container-padding),
    PaddingRight:            calc(#{pfe-var(container-padding)} * 2),
    PaddingLeft:             calc(#{pfe-var(container-padding)} * 2),
    TextTransform:           none,
  )
);

// TODO: These vars (focus & highlight) will be deprecated at 1.0  
$backwards-compatibility: (
  Color--focus:  pfe-local(focus, pfe-var(text)), 
  BorderColor:   pfe-local(highlight, pfe-var(ui-accent)),
);
$LOCAL-VARIABLES: map-deep-merge($LOCAL-VARIABLES, $backwards-compatibility);



/// ===========================================================================
/// DEFAULT / WIND TAB VARIANT
/// ===========================================================================

:host {
  text-align: left;
  position: relative;
  display: block;
  margin: pfe-local(Margin, $region: tab);
  // Padding
  padding:
    pfe-local(PaddingTop, $region: tab) pfe-local(PaddingRight, $region: tab) pfe-local(PaddingBottom, $region: tab) pfe-local(PaddingLeft, $region: tab);
  // Borders         
  border-style: pfe-var(ui--border-style);
  border-width: pfe-var(ui--border-width);
  border-color: transparent;
  border-bottom-width: pfe-local(BorderWidth);
  // Inner style
  background-color: pfe-local(BackgroundColor);
  cursor: pointer;
  text-align: pfe-local(TextAlign, center, $region: tab);

  // Exposing this for customization
  text-transform: pfe-local(TextTransform, $region: tab);
  font-family: pfe-var(font-family);
  font-weight: pfe-var(font-weight--normal);
  font-size: pfe-local(FontSize, $region: tab);

  .pfe-tab {
    display: inline-block;

    * {
      font-size: inherit;
      font-weight: inherit;
      margin: 0;
      color: pfe-local(Color);
    }
  }

  @at-root #{&}(:hover) {
    border-bottom-color: pfe-local(BorderColor--hover);
    .pfe-tab * {
      color: pfe-local(Color--focus);
    }
  }
    @at-root #{&}(:active) {
    border-bottom-color: pfe-local(BorderColor--hover);
    .pfe-tab * {
      color: pfe-local(Color--focus);
    }
  }

  @at-root #{&}(:focus) {
    border-bottom-color: pfe-local(BorderColor--hover);
    .pfe-tab * {
      color: pfe-local(Color--focus);
    }
  }

  @at-root #{&}([aria-selected="true"]) {
    border-bottom-color: pfe-local(BorderColor);
    .pfe-tab * {
      color: pfe-local(Color--focus);
    }
  }
}

/// ===========================================================================
/// VERTICAL TAB ORIENTATION
/// ===========================================================================

:host([pfe-variant="earth"][vertical]) .pfe-tab {
  display: inline-block;
}

@media screen and (min-width: pfe-breakpoint(md)) {

  :host([vertical]) {
    border-bottom-color: transparent;
    border-bottom-width: 0;
    border-left-color: pfe-var(surface--border);
    border-left-width: pfe-var(ui--border-width);

    --pfe-tabs--Margin: 0 calc(#{pfe-var(ui--border-width)} * -1) 0 0;
    padding: pfe-var(container-padding);
  }

  :host([vertical][aria-selected="true"]) {
    border-left-color: pfe-local(BorderColor);
    border-left-width: 3px;
  }

  :host([vertical][pfe-variant="wind"]) {
    border-left: pfe-var(ui--border-width) pfe-var(ui--border-style) pfe-var(surface--border);
    text-align: left !important;
  }

  :host([vertical][pfe-variant="wind"][aria-selected="true"]) {
    border-right: pfe-local(BorderWidth) pfe-var(ui--border-style) transparent;
    border-left: pfe-local(BorderWidth) pfe-var(ui--border-style) pfe-local(BorderColor);
    padding-left: calc(#{pfe-var(container-padding)} - 2px);
  }

  :host([vertical][pfe-variant="wind"][aria-selected="false"]) {
    border-right: pfe-local(BorderWidth) pfe-var(ui--border-style) transparent;
  }

  :host([vertical][pfe-variant="wind"][aria-selected="false"]:hover) {
    border-right: pfe-local(BorderWidth) pfe-var(ui--border-style) transparent;
    border-bottom: 0;
    border-left: pfe-local(BorderWidth) pfe-var(ui--border-style) pfe-local(BorderColor--hover);
    padding-left: calc(#{pfe-var(container-padding)} - 2px);
  }

}


/// ===========================================================================
/// EARTH TAB VARIANTS
/// ===========================================================================
:host([pfe-variant="earth"]) {
  @include browser-query(ie11) {
    background-color: pfe-fetch(surface--lighter);
    color: pfe-fetch(text--muted);
  }
}

:host(:not([vertical])[pfe-variant="earth"]:not([aria-selected="true"]):first-of-type) {
  border-left-color: transparent;
}

:host(:not([vertical])[pfe-variant="earth"]:not([aria-selected="true"]):last-of-type) {
  border-right-color: transparent;
}


:host([pfe-variant="earth"][aria-selected="false"]) {
  background-color: pfe-local(BackgroundColor--inactive); //@todo update to use opacity
  border-color: pfe-var(surface--border);
  border-top-width: pfe-local(BorderWidth);
  border-top-color: transparent;
  border-bottom-color: pfe-local(BorderColor--hover);
  border-bottom-width: pfe-var(ui--border-width);
}

:host([pfe-variant="earth"][aria-selected="false"]:hover) {
  border-top-color: pfe-local(BorderColor--hover);
}

// nth of type is needed to override first and last of type selectors above
:host([pfe-variant="earth"][aria-selected="true"]) {
  background-color: pfe-var(surface--lightest);
  border-bottom: 0;
  border-left-color: pfe-var(surface--border);
  border-right-color: pfe-var(surface--border);
  border-top: solid pfe-local(BorderColor) pfe-local(BorderWidth);

  @include browser-query(ie11) {
    color: pfe-fetch(text--muted);
    background-color: pfe-fetch(surface--lightest);
    border-left: pfe-fetch(ui--border-width) pfe-fetch(ui--border-style) pfe-fetch(surface--border);
    border-top: pfe-local(BorderWidth) pfe-fetch(ui--border-style) pfe-local(BorderColor);
    border-bottom: 0;
  }
}

:host([pfe-variant="earth"][aria-selected="true"]:last-of-type) {
  border-right: pfe-var(ui--border-width) pfe-var(ui--border-style) pfe-var(surface--border);
}


/// ===========================================================================
/// EARTH TAB VERTICAL ORIENTATION
/// ===========================================================================

@media screen and (min-width: #{pfe-breakpoint(md)}) {

  :host([vertical][pfe-variant="earth"]) {
    border-top: pfe-var(ui--border-width) pfe-var(ui--border-style) pfe-var(surface--border);
    border-bottom: pfe-var(ui--border-width) pfe-var(ui--border-style) pfe-var(surface--border);
    border-left-width: pfe-var(ui--border-width--active);
    text-align: left;
  }

  :host([vertical][pfe-variant="earth"][aria-selected="false"]:first-of-type) {
    border-top-color: transparent;
    border-left: pfe-local(BorderWidth) pfe-var(ui--border-style) transparent;
  }

  :host([vertical][pfe-variant="earth"][aria-selected="false"]:last-of-type) {
    border-bottom-color: transparent;
  }

  :host([vertical][pfe-variant="earth"][aria-selected="false"]) {
    border-right: 0;
    border-bottom: 0;
    border-left-color: transparent;
  }

  :host([vertical][pfe-variant="earth"][aria-selected="false"]:hover) {
    border-left-color: #{pfe-var(surface--border)};
    border-top-color: #{pfe-var(surface--border)};
  }

  :host([vertical][pfe-variant="earth"][aria-selected="false"]:first-of-type:hover) {
    border-left-color: #{pfe-var(surface--border)};
    border-top-color: transparent;
  }

  :host([vertical][pfe-variant="earth"][aria-selected="true"]) {
    border-top-color: pfe-var(surface--border);
    border-left-color: pfe-local(BorderColor);
    border-left-width: pfe-local(BorderWidth);
    border-right-color: transparent;
    margin-right: #{pfe-fetch(ui--border-width) * -1};
  }
}


/// ===========================================================================
/// EARTH TAB VARIANTS ON DARK & SATURATED
/// ===========================================================================
/// In dark & saturated contexts, we override the local color vars


:host([on="dark"][pfe-variant="earth"]) {
  --pfe-tabs--Color: #{pfe-var(text--on-dark)};
  --pfe-tabs--Color--focus: #{pfe-var(text--on-dark)};
  border-right-color: pfe-var(surface--border--darker);
  border-left-color: pfe-var(surface--border--darker);
}

:host([on="dark"][pfe-variant="earth"][aria-selected="false"]) {
  --pfe-tabs--Color: #{pfe-var(text--muted--on-dark)};
  background-color: pfe-var(surface--darker);

  @include browser-query(ie11) {
    background-color: pfe-var(surface--lightest) !important;
    color: pfe-fetch(text) !important;
  }
}

:host([on="dark"][pfe-variant="earth"][aria-selected="false"]:first-of-type) {
  border-left: #{pfe-var(ui--border-width)} #{pfe-var(ui--border-style)} transparent;
}

:host([on="dark"][pfe-variant="earth"][aria-selected="true"]) {
  --pfe-tabs--Color--focus: #{pfe-var(text--on-dark)};
  background-color: pfe-var(surface--darkest);

  @include browser-query(ie11) {
    color: pfe-fetch(text--on-dark) !important;
  }
}

// SATURATED
:host([pfe-variant="earth"][on="saturated"][aria-selected="false"]) {
  --pfe-tabs--BackgroundColor: #{pfe-var(surface--lighter)};
}

:host([pfe-variant="earth"][on="saturated"][aria-selected="true"]) {
  color: pfe-local(Color--focus);
}

:host([pfe-variant="earth"][on="saturated"]:hover) {
  color: pfe-local(Color--focus);
}

:host([pfe-variant="earth"][on="saturated"][aria-selected="true"]) {
  --pfe-tabs--Color: #{pfe-var(text)};
}

/// ===========================================================================
/// WIND TAB VARIANTS ON DARK & SATURATED
/// ===========================================================================

// SATURATED
:host([on="saturated"][pfe-variant="wind"]) {
  --pfe-tabs--Color: #{pfe-var(text--on-saturated)};
  --pfe-tabs--Color--focus: #{pfe-var(text--on-saturated)};

  @include browser-query(ie11) {
    color: pfe-fetch(text) !important;
    background-color: transparent;
  }
}

:host([on="saturated"][pfe-variant="wind"][aria-selected="true"]) {
  --pfe-tabs--Color--focus: #{pfe-var(text--on-saturated)};
  --pfe-tabs--BorderColor: pfe-var(surface--lightest);

}

:host([on="saturated"][pfe-variant="wind"][aria-selected="false"]) {
  --pfe-tabs--Color: #{pfe-var(text--muted--on-saturated)};
}

:host([on="saturated"][pfe-variant="wind"][aria-selected="false"]:hover) {
  border-bottom-color: pfe-local(BorderColor--hover);
}

:host([on="saturated"][pfe-variant="wind"][aria-selected="true"]:last-of-type) {
  @include browser-query(ie11) {
    border-left: 0 !important;
  }
}

// DARK
:host([on="dark"][pfe-variant="wind"]) {
  --pfe-tabs--Color: #{pfe-var(text--on-dark)}; 
  --pfe-tabs--Color--focus: #{pfe-var(text--on-dark)};
  @include browser-query(ie11) {
    color: pfe-fetch(text) !important;
  }
}

:host([on="dark"][pfe-variant="wind"][aria-selected="false"]:hover) {
  border-bottom-color: pfe-var(surface--base);
  --pfe-tabs__tab--BorderBottom: #{pfe-local(BorderWidth)} #{pfe-var(ui--border-style)} #{pfe-var(surface--border)};
}

:host([on="dark"][pfe-variant="wind"][vertical][aria-selected="false"]:hover) {
  border-bottom: 0;
}