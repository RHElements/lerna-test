@import "../../pfe-sass/pfe-sass";

$LOCAL: tabs;

/// ===========================================================================
/// Component Specific SASS Vars
/// ===========================================================================

$pfe-tabs__panel--PaddingLeft-factor:  2;

$variables: (
  tabs: (
    BorderColor: pfe-color(surface--border)
  )
);

:host {
  @include pfe-print-variables($variables);

  display: #{pfe-local($cssvar: Display, $fallback: block)};
  padding: #{pfe-local($cssvar: Padding, $fallback: 0)};

  .tabs {  
    display: flex;
    flex-direction: #{pfe-local($cssvar: FlexDirection, $region: tabs, $fallback: row)};
    width: #{pfe-local($cssvar: Width, $region: tabs, $fallback: auto)};

    border-top:    #{pfe-local($cssvar: BorderTop, $region: tabs, $fallback: 0)};
    border-right:  #{pfe-local($cssvar: BorderRight, $region: tabs, $fallback: 0)};
    border-bottom: #{pfe-local($cssvar: BorderBottom, $region: tabs, $fallback: #{pfe-var(ui--border-width)} #{pfe-var(ui--border-style)} #{pfe-local($cssvar: BorderColor, $region: tabs)} )};
    border-left:   #{pfe-local($cssvar: BorderLeft, $region: tabs, $fallback: 0)};

    padding: #{pfe-local($cssvar: Padding, $region: tabs, $fallback: 0)};
  }

  .panels {
    width: #{pfe-local($cssvar: Width, $region: panels, $fallback: auto)};

    padding-top: #{pfe-local($cssvar: PaddingTop, $region: panels, $fallback: 0)};
    padding-right: #{pfe-local($cssvar: PaddingRight, $region: panels, $fallback: 0)};
    padding-bottom: #{pfe-local($cssvar: PaddingBottom, $region: panels, $fallback: 0)};
    padding-left: #{pfe-local($cssvar: PaddingLeft, $region: panels, $fallback: 0)};
  }
}

:host(:not([vertical])[pfe-tab-align="center"]) {
  .tabs {
    justify-content: center;
  }
}


/// ===========================================================================
/// VERTICAL ORIENTATION
/// ===========================================================================

@media screen and (min-width: #{pfe-breakpoint(md)}) {
  :host([vertical]) {
    --pfe-tabs--Display: flex; // Sets tabs to appear to the left of the panels
    --pfe-tabs__tabs--FlexDirection: column;
    --pfe-tabs__tabs--Width: 22.22%;

    --pfe-tabs__tabs--BorderRight: #{pfe-var(ui--border-width)} #{pfe-var(ui--border-style)} #{pfe-local(BorderColor)};
    --pfe-tabs__tabs--BorderBottom: 0;

    --pfe-tabs__panels--Width: 77.78%;
    --pfe-tabs__panels--PaddingRight: #{pfe-var(container-padding)};

    @include browser-query(ie11) {
      display: flex;
      .tabs {
        flex-direction: column;
        width: 22.22%;
        border-right: 1px solid #{pfe-color(surface--border)};
        border-bottom: 0;
      }

      .panels {
        width: 77.8%;
        padding-right: 1em;
      }

    }
  }
}

/// ===========================================================================
/// TAB VARIANTS
/// ===========================================================================

@media screen and (min-width: #{pfe-breakpoint(md)}) {
  :host([vertical][pfe-variant="earth"]) {
    --pfe-tabs__tabs--Padding: #{pfe-var(container-padding)} 0 0 0;
    
    @include browser-query(ie11) {
      .tabs {
        padding: 1em 0 0 0;
      }
    }
  }
}

:host([pfe-variant="earth"]) {
  --pfe-tabs__tabs--PaddingLeft: #{pfe-var(container-padding)};

  .tabs ::slotted(pfe-tab[aria-selected="false"]:not([vertical]):first-of-type) {
    border-left: 0;
  }
}
    
@include browser-query(ie11) {
  :host([pfe-variant="earth"]) .tabs {
    padding-left: 1em;
  }
}

@include pfe-theme-contexts; // imports on="light" etc support
