import RHElement from"../rhelement/rhelement.js";import{hash}from"./djb-hash.js";class RhAvatar extends RHElement{get html(){return`\n<style>\n:host {\n  display: block; }\n  :host canvas {\n    image-rendering: optimizeSpeed;\n    \n    image-rendering: -moz-crisp-edges;\n    \n    image-rendering: -webkit-optimize-contrast;\n    \n    image-rendering: -o-crisp-edges;\n    \n    image-rendering: pixelated;\n    \n    -ms-interpolation-mode: nearest-neighbor;\n     }\n\n:host([hidden]) {\n  display: none; }\n</style>\n<canvas></canvas>`}static get tag(){return"rh-avatar"}get templateUrl(){return"rh-avatar.html"}get styleUrl(){return"rh-avatar.scss"}static get observedAttributes(){return["value","shape"]}static get shapes(){return{triangle:"triangle"}}get value(){return this.getAttribute("value")}set value(t){return this.setAttribute("value",t)}get shape(){return this.getAttribute("shape")||RhAvatar.shapes.square}set shape(t){if(!RhAvatar.shapes[t]){this.log(`invalid shape "${t}", valid shapes are: ${Object.values(RhAvatar.shapes)}`);return}return this.setAttribute("shape",t)}constructor(){super(RhAvatar)}connectedCallback(){super.connectedCallback();this.t=this.shadowRoot.querySelector("canvas");this.t.width=608;this.t.height=608;this.s=this.t.width/4;this.i=this.t.getContext("2d");this.h=window.getComputedStyle(this).getPropertyValue("--rh-theme--color--ui-accent").trim()||"#cce6ff";this.o=window.getComputedStyle(this).getPropertyValue("--rh-theme--color--ui-accent--hover").trim()||"#464646";this.dispatchEvent(new CustomEvent(`${RhAvatar.tag}:connected`,{bubbles:false}))}attributeChangedCallback(t,e,s){super.attributeChangedCallback(...arguments);const i=this.getAttribute("value");if(this.connected){this.l(i)}else{this.addEventListener(`${RhAvatar.tag}:connected`,()=>this.l(i))}}l(t){const e=hash(t).toString(2);const s=e.split("").map(t=>~~t);this.u();this.g();if(this.shape===RhAvatar.shapes.triangle){this.v(s)}this.m()}u(){this.i.clearRect(0,0,this.t.width,this.t.height)}g(){this.i.fillStyle=this.h;this.i.fillRect(0,0,this.t.width,this.t.height)}v(t){this.i.fillStyle=this.o;if(this.i){const e=t;let s=e.length;while(s--){if(e[s]){const t=Math.floor(s/2)%2;const e=Math.floor(s/4);const i=s%4;const h=[t,e];const a=[t,e];const r=[t,e];switch(i){case 0:a[1]++;r[0]++;r[1]++;break;case 1:a[0]++;r[0]++;r[1]++;break;case 2:a[0]++;r[1]++;break;case 3:h[0]++;a[0]++;a[1]++;r[1]++;break}this.p(h,a,r)}}}}p(t,e,s){if(this.i){this.R(t,e,s);this.R([4-t[0],t[1]],[4-e[0],e[1]],[4-s[0],s[1]])}}R(t,e,s){this.i.beginPath();this.i.moveTo(...t.map(t=>t*this.s));this.i.lineTo(...e.map(t=>t*this.s));this.i.lineTo(...s.map(t=>t*this.s));this.i.closePath();this.i.fill();this.i.fill();this.i.fill()}m(){const t=this.i.createLinearGradient(0,this.t.height,this.t.width,0);t.addColorStop(0,`${this.o}cc`);t.addColorStop(1,`${this.o}00`);t.addColorStop(1,`${this.o}CC`);this.i.fillStyle=t;this.i.fillRect(0,0,this.t.width,this.t.height)}}RHElement.create(RhAvatar);export default RhAvatar;
