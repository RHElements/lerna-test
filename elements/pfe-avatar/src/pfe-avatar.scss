@import "../../pfe-sass/pfe-sass";
@include include-contexts; // imports on="light" etc support

:host {
  --pfe-avatar--width: 128px;

  display: block;
  position: relative;

  width: var(--pfe-avatar--width);
  height: var(--pfe-avatar--width); // not a typo; width == height

  canvas {
    width: 100%;
    height: 100%;

    image-rendering: optimizeSpeed; /* Older versions of FF          */
    image-rendering: -moz-crisp-edges; /* FF 6.0+                       */
    image-rendering: -webkit-optimize-contrast; /* Safari                        */
    image-rendering: -o-crisp-edges; /* OS X & Windows Opera (12.02+) */
    image-rendering: pixelated; /* Awesome future-browsers       */
    -ms-interpolation-mode: nearest-neighbor; /* IE                            */
  }
}

:host([pfe-shape="rounded"]) {
  // when border radius lines up with the size of the avatar's random
  // patterns, it looks nice, so make border-radius the same size as the
  // patterns, ie 1/8th the width of the avatars.  add 1px beacuse it looks
  // just a little bit better.
  img,
  canvas {
    border-radius: calc(var(--pfe-avatar--width) / 8 + 1px);
  }
}

:host([pfe-shape="circle"]) {
  img,
  canvas {
    border-radius: 50%;
  }
}

// when src attribute is provided, show the img but hide the canvas
:host([pfe-src]) {
  canvas {
    display: none;
  }

  img {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
}

// when src attribute is not present, hide the img
:host(:not([pfe-src])) img {
  display: none;
}

:host([hidden]) {
  display: none;
}
