@import "../../pfe-sass/pfe-sass";

$LOCAL: card;

:host {
  //-- Padding and spacing values

  // Individual padding overrides available
  --pfe-card--PaddingTop: calc(#{pfe-var(container-spacer)} * 2);
  --pfe-card--PaddingRight: calc(#{pfe-var(container-spacer)} * 2);
  --pfe-card--PaddingBottom: calc(#{pfe-var(container-spacer)} * 2);
  --pfe-card--PaddingLeft: calc(#{pfe-var(container-spacer)} * 2);

  // Combine above variables or allow single override point via variable
  --pfe-card--Padding: #{pfe-local(PaddingTop)} #{pfe-local(PaddingRight)} #{pfe-local(PaddingBottom)} #{pfe-local(PaddingLeft)};

  // Internal spacing; elements inside the card (header, body, footer regions)
  --pfe-card--spacing: #{pfe-var(container-spacer)};

  //-- Border settings
  --pfe-card--BorderWeight: 1px;
  --pfe-card--BorderStyle:  solid;
  --pfe-card--BorderColor:  transparent;
  --pfe-card--BorderRadius: #{pfe-var(surface--border-radius)};

  //-- Border variable encompasses width, style, and color
  --pfe-card--Border: #{pfe-local(BorderWeight)} #{pfe-local(BorderStyle)} #{pfe-local(BorderColor)};

  //-- Color properties
  --pfe-card--BackgroundColor: #{pfe-color(surface--base)};

  // Background color support for header region
  --pfe-card__header--BackgroundColor: #{pfe-color(surface--base--harmony)};

  // Broadcast color variables
  --pfe-broadcasted--color--text:               #{pfe-color(surface--base--text)};
  --pfe-broadcasted--color--ui-link:            #{pfe-color(surface--base--link)};
  --pfe-broadcasted--color--ui-link--visited:   #{pfe-color(surface--base--link--visited)};
  --pfe-broadcasted--color--ui-link--hover:     #{pfe-color(surface--base--link--hover)};
  --pfe-broadcasted--color--ui-link--focus:     #{pfe-color(surface--base--link--focus)};

  //-- Deprecated but still supported
  --pfe-card_header--size:  #{pfe-var(font-size--heading--gamma)};

  // Add backward support for previous variable naming
  // @TODO deprecate padding and bg in favor of BEM naming
  --pfe-card--padding:      #{pfe-local(Padding)};
  --pfe-card--bg:           #{pfe-local(BackgroundColor)};

  // Start of style declarations for host element
  display: flex;
  flex-direction: column;
  justify-items: flex-start;

  padding:       #{pfe-local(Padding)};
  border:        #{pfe-local(Border)};
  border-radius: #{pfe-local(BorderRadius)};

  // Base colors
  background-color: #{pfe-local(BackgroundColor)};
  color: #{pfe-radio(color, text)};
}

// @TODO Deprecate "dark" and "light" in favor of "darker" and "lighter"
@each $color in (dark, darker, darkest, light, lighter, lightest, complement, accent) {
  $label: $color;
  // Add backward support for dark and light
  @if $color == "dark" or $color == "light" {
    $color: "#{$color}er";
  }
  // Update variable values to match provided attribute
  // @TODO deprecate [color] in favor of [pfe-color]
  :host([color="#{$label}"]),
  :host([pfe-color="#{$label}"]) {
    --pfe-card--BackgroundColor:                  #{pfe-color(surface--#{$color})};
    --pfe-broadcasted--color--text:               #{pfe-color(surface--#{$color}--text)};
    --pfe-broadcasted--color--ui-link:            #{pfe-color(surface--#{$color}--link)};
    --pfe-broadcasted--color--ui-link--visited:   #{pfe-color(surface--#{$color}--link--visited)};
    --pfe-broadcasted--color--ui-link--hover:     #{pfe-color(surface--#{$color}--link--hover)};
    --pfe-broadcasted--color--ui-link--focus:     #{pfe-color(surface--#{$color}--link--focus)};
    // Header colors
    --pfe-card__header--BackgroundColor:          #{pfe-color(surface--#{$color}--harmony)};
    // Update broadcast variables in header region of card
    .pfe-card__header {
      --pfe-broadcasted--color--text:             #{pfe-color(surface--#{$color}--harmony--text)};
      --pfe-broadcasted--color--ui-link:          #{pfe-color(surface--#{$color}--harmony--link)};
      --pfe-broadcasted--color--ui-link--visited: #{pfe-color(surface--#{$color}--harmony--link--visited)};
      --pfe-broadcasted--color--ui-link--hover:   #{pfe-color(surface--#{$color}--harmony--link--hover)};
      --pfe-broadcasted--color--ui-link--focus:   #{pfe-color(surface--#{$color}--harmony--link--focus)};
    }
    
  }
}

// @TODO deprecate [size] in favor of [pfe-size]
:host([size="small"]),
:host([pfe-size="small"]) {
  --pfe-card--PaddingTop:     #{pfe-var(container-spacer)};
  --pfe-card--PaddingRight:   #{pfe-var(container-spacer)};
  --pfe-card--PaddingBottom:  #{pfe-var(container-spacer)};
  --pfe-card--PaddingLeft:    #{pfe-var(container-spacer)};
}

// Remove margins from typography inside the slots
@each $tag in (p, h1, h2, h3, h4, h5, h6) {
  ::slotted(#{$tag}) {
    // Remove top margins
    margin-top: 0;
  }
}

.pfe-card {
  &__header,
  &__body,
  &__footer {
    display: block;

    &:not(:last-child) {
      margin-bottom: #{pfe-local(spacing)};
    }
  }
  
  &__header {
    --pfe-broadcasted--color--text:             #{pfe-color(surface--base--harmony--text)};
    --pfe-broadcasted--color--ui-link:          #{pfe-color(surface--base--harmony--link)};
    --pfe-broadcasted--color--ui-link--visited: #{pfe-color(surface--base--harmony--link--visited)};
    --pfe-broadcasted--color--ui-link--hover:   #{pfe-color(surface--base--harmony--link--hover)};
    --pfe-broadcasted--color--ui-link--focus:   #{pfe-color(surface--base--harmony--link--focus)};

    // Declare the header background color
    background-color: #{pfe-local($cssvar: BackgroundColor, $region: header)};
    // Margin style only on top and sides
    margin-top: calc(-1 * #{pfe-local(PaddingTop)});
    margin-right: calc(-1 * #{pfe-local(PaddingRight)});
    margin-left: calc(-1 * #{pfe-local(PaddingLeft)});
    // Padding for the header region
    padding-top: #{pfe-local(spacing)}; // Top padding differs if background color applied
    padding-right: #{pfe-local(PaddingRight)};
    padding-left: #{pfe-local(PaddingLeft)};
    padding-bottom: #{pfe-local(spacing)};
  }
  
  &__footer {
    margin-top: auto; // This allows the footer to move to the very bottom
    justify-self: flex-end;
  }
}
