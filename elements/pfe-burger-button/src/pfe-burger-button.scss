@import "../../pfe-sass/pfe-sass";
:host {
  display: block;
}

:host([hidden]) {
  display: none;
}

///
// Burger icon mixin
///
@mixin css-art--burger(
  $color: #000,
  $inner-selector: 'span',
  // Converting all px to em for scalability with font-size
  $button-size: (60px / 16px * 1em),
) {
  $size-ratio: $button-size / (60px / 16px * 1em);
  display: block;
  width: $button-size;
  height: #{$size-ratio * (36px / 16px * 1em)};
  overflow: hidden;

  &:before,
  &:after,
  #{$inner-selector} {
    content: '';
    position: absolute;
    box-sizing: border-box;
    display: block;
    border-top: #{4px / 16px * 1em} solid $color;
    width: $button-size;
    height: 0;
    // sass-lint:disable indentation
    transition:
      opacity 0.25s,
      transform 0.25s;
    // sass-lint:enable indentation
  }

  &:before {
    top: 0;
    left: 0;
    height: 0;
    transform: none;
    transform-origin: left top;
  }

  &:after {
    bottom: 0;
    left: 0;
  }

  #{$inner-selector} {
    top: 50%;
    left: 0;
    transform: translate(0, -50%);
    transform-origin: right top;
  }
}

///
// Mixin to convert a burger to a close icon
///
@mixin css-art--burger--close(
  $color: #000,
  $inner-selector: 'span',
  $button-size: (60px / 16px * 1em),
) {
  $size-ratio: $button-size / (60px / 16px * 1em);
  height: #{(46px / 16px * 1em) * $size-ratio};

  // sass-lint:disable indentation
  &:before {
    transform:
      translate(
        #{(-6px / 16px * 1em) * $size-ratio}
      )
      rotate(-45deg)
    ;
    transform-origin: right top;
  }

  &:after {
    transform:
      translate(
        #{(-6px / 16px * 1em) * $size-ratio},
        #{-2px / 16px * 1em})
      rotate(45deg)
    ;
    transform-origin: right bottom;
  }
  // sass-lint:enable indentation

  #{$inner-selector} {
    opacity: 0;
    transform: rotate(45deg);
    transform-origin: right top;
  }
}

:host,
button {
  width: #{36px / 16px * 1em};
  height: #{36px / 16px * 1em};
}

button {
  position: relative;
  border: 0;
  appearance: none;
  cursor: pointer;
  background: rgb(62, 166, 207);
  transition: background 0.25s;

  &[pfe-active] {
    background: rgb(34, 177, 69);
  }
}

.assistive-text {
  @include screenreader-only;
}

.burger {
  @include css-art--burger(#fff);
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) scale(0.25);

  button[pfe-active] & {
    @include css-art--burger--close;
  }
}
