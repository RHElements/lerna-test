// Please see the pfe-sass README for guidance on using these tools
@import "../../pfe-sass/pfe-sass";
@import "../../pfe-absolute-position/src/pfe-absolute-position.scss";

$LOCAL: popover;

// Example local variable, using BEM format
// --pfe-popover__region--Property: value;

// This variable is global so that helper functions can reference it
$LOCAL-VARIABLES: (
  Fonsize: 16px,
  MinWidth: 360px,
  MaxWidth: 360px,
  BoxShadow: 0px 7px 15px #00000026,
  Position: relative,
  BackgroundColor: #{$pf-color-white},
  Color: #{$pf-color-black-900},
  content: (
    Padding: #{$pf-spacer-sm},
  ),
  header: (
    FontWeight: 500,
    MarginBottom: #{$pf-spacer-xs},
  ),
  footer: (
    MarginTop: #{$pf-spacer}
  ),
  closeButton: (
    Top: #{$pf-spacer-sm},
    Right: #{$pf-spacer-sm},
    Position: absolute,
    Color: #6B6E74,
  ),
  closeButton--hover: (
    Color: #151515,
  ),
  arrow: (
    Width: 30px,
    Height: 30px,
    Position: absolute,
    BackgroundColor: #{$pf-color-white},
  ),
  arrow--top: (
    Transform: translate(-50%, 50%) rotate(45deg),
    Left: 50%,
    Bottom: 0,
  ),
  arrow--bottom: (
    Transform: translate(-50%, -50%) rotate(45deg),
    Top: 0,
    Left: 50%,
  ),
  arrow--right: (
    Transform: translate(-50%, -50%) rotate(45deg),
    Top: 50%,
    Left: 0,
  ),
  arrow--left: (
    Transform: translate(50%, -50%) rotate(45deg),
    Top: 50%,
    Right: 0,
  ),
);

:host {
  // Avoid printing local variables on host, instead use the pfe-local() function to set property values
  // Example: color: pfe-local(Color);
  display: block;
}

:host([hidden]) {
  display: none;
}

.pf-c-popover {
  font-size: pfe-local(Fonsize);
  position: pfe-local(Position);
  min-width: pfe-local(MinWidth);
  max-width: pfe-local(MaxWidth);
  box-shadow: pfe-local(BoxShadow);
  background-color: pfe-local(BackgroundColor);
  color: pfe-local(Color);
  // We are going to disable the focus outline on this element because
  // we are programatically sending foucs into the popover. This looks
  // problematic but it's legit.
  outline: transparent;

  .pf-c-popover__arrow {
    width: pfe-local(Width, $region: arrow);
    height: pfe-local(Height, $region: arrow);
    position: pfe-local(Position, $region: arrow);
    background-color: pfe-local(BackgroundColor);
  }

  &.pf-m-top {
    .pf-c-popover__arrow {
      transform: pfe-local(Transform, $region: arrow--top);
      left: pfe-local(Left, $region: arrow--top);
      bottom: pfe-local(Bottom, $region: arrow--top);
      box-shadow: 0px 3px 4px #0000000D;
    }
  }

  &.pf-m-bottom {
    // @todo i have no idea why I have to do this. very frustrating.
    // top and left position work perfectly
    transform: translateY(20px);
    .pf-c-popover__arrow {
      top: pfe-local(Top, $region: arrow--bottom);
      left: pfe-local(Left, $region: arrow--bottom);
      transform: pfe-local(Transform, $region: arrow--bottom);
      box-shadow: 0px -3px 4px #0000000D;
    }
  }

  &.pf-m-left {
    .pf-c-popover__arrow {
      transform: pfe-local(Transform, $region: arrow--left);
      top: pfe-local(Top, $region: arrow--left);
      right: pfe-local(Right, $region: arrow--left);
      box-shadow: 3px 0px 4px #0000000D;
    }
  }

  &.pf-m-right {
    // @todo i have no idea why I have to do this. very frustrating.
    // top and left position work perfectly
    transform: translateX(20px);
    .pf-c-popover__arrow {
      transform: pfe-local(Transform, $region: arrow--right);
      top: pfe-local(Top, $region: arrow--right);
      right: pfe-local(Right, $region: arrow--right);
      box-shadow: -3px 0px 4px #0000000D;
    }
  }
}

.pf-c-popover__content {
  position: relative;
  padding: pfe-local(Padding, $region: content);
  background-color: pfe-local(BackgroundColor);

  > .pf-c-title,
  #header::slotted(*) {
    @include pfe-typography(xl, $type: "title");
    font-weight: pfe-local(FontWeight, $region: header);
    margin-top: 0;
    margin-bottom: pfe-local(MarginBottom, $region: header);
  }

  // Close button
  > .pf-c-button {
    position: pfe-local(Position, $region: closeButton);
    top: pfe-local(Top, $region: closeButton);
    right: pfe-local(Right, $region: closeButton);
    color: pfe-local(Color, $region: closeButton);
    background-color: transparent;
    border-color: transparent;

    &:hover {
      color: pfe-local(Color, $region: closeButton--hover);
    }
    &:focus {
      color: pfe-local(Color, $region: closeButton--hover);
    }

    // Create room for the close button
    + * {
      padding-right: var(--pf-c-popover--c-button--sibling--PaddingRight);
    }
  }
}

// Body
.pf-c-popover__body {
  word-wrap: break-word;
}

.pf-c-popover__footer {
  margin-top: pfe-local(MarginTop, $region: footer);
}

// button-group allows adds a consistant gap between buttons and links
// you can control the gap with --pfe-popover__buttonGroup--gap
//
// This is the fallback implementation if the browser doesn't support
// gap
.pf-c-popover__button-group {
  margin-left: calc(var(--pfe-popover__buttonGroup--gap, 24px) / -2);
  margin-right: calc(var(--pfe-popover__buttonGroup--gap, 24px) / -2);

  & slot::slotted(*) {
    margin-left: calc(var(--pfe-popover__buttonGroup--gap, 24px) / 2);
    margin-right: calc(var(--pfe-popover__buttonGroup--gap, 24px) / 2);
  }
}
// This is the future flex gap cleaner implementation
@supports (gap: 24px) and (display: flex) {
  .pf-c-popover__button-group {
    margin-left: unset;
    margin-right: unset;
    display: flex;
    column-gap: var(--pfe-popover__buttonGroup--gap, var(--X-pfe-popover__buttonGroup--gap, 24px));
    row-gap: unset;
    flex-wrap: wrap;

    & slot::slotted(*) {
      margin-left: unset;
      margin-right: unset;
    }
  }
}

:host([theme="dark"]) {
  --pfe-popover--Color: var(--pfe-popover--dark--Color, #{$pf-color-white});
  --pfe-popover--BackgroundColor: var(--pfe-popover--dark--BackgroundColor, #{$pf-color-black-900});
  --pfe-popover__closeButton--Color: var(--pfe-popover--dark__closeButton--Color, #{$pf-color-white});

  .pf-c-button:hover,
  .pf-c-button:focus {
    --pfe-popover__closeButton--hover--Color: var(--pfe-popover--dark__closeButton--hover--Color, #D2D2D2);
  }
}