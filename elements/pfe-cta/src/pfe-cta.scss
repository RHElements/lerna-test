@import "../../pfe-sass/pfe-sass";

$LOCAL: cta;
$pfe-cta__arrow-size: 0.313em;

:host {
  --pfe-cta--BorderRadius: 0;
  --pfe-cta__arrow--Display:  inline;
  --pfe-cta__arrow--Padding:  0 .125rem 0 .375rem;

  --pfe-cta--BackgroundColor:         transparent;
  --pfe-cta--BackgroundColor--hover:  transparent;
  --pfe-cta--BackgroundColor--focus:  rgba(0,102,204, .1);

  --pfe-cta--BorderColor:        transparent;
  --pfe-cta--BorderColor--hover: transparent;
  --pfe-cta--BorderColor--focus: transparent;

  --pfe-cta--Color:         #{pfe-color(ui-link)};
  --pfe-cta--Color--hover:  #{pfe-color(ui-link--hover)};
  --pfe-cta--Color--focus:  #{pfe-color(ui-link--focus)};

  --pfe-cta__inner--BorderColor:        transparent;
  --pfe-cta__inner--BorderColor--hover: transparent;
  --pfe-cta__inner--BorderColor--focus: transparent;

  --pfe-cta--Padding: .6rem 0;

  display: inline-block;
  font-family: #{pfe-var(font-family)};
  font-size:   #{pfe-var(font-size)};
  font-weight: #{pfe-var(font-weight--bold)};
  line-height: #{pfe-var(line-height)};

  background-color: #{pfe-local(BackgroundColor)};
  border-color:     #{pfe-local(BorderColor)};

  position: relative;
  transition: all #{pfe-var(animation-timing)};

  line-height: inherit;
  vertical-align:  middle;

  background-color: #{pfe-local(BackgroundColor)};
  border-radius: #{pfe-local(BorderRadius)};
  border:        #{pfe-var(ui--border-width)} #{pfe-var(ui--border-style)} #{pfe-local(BorderColor)};



  .pfe-cta--arrow {
    display: var(--pfe-cta__arrow--Display);
    padding: var(--pfe-cta__arrow--Padding);

    fill: #{pfe-local(Color)};

    position: relative;
    top: .1rem; 
    width: 13px;
    height: 13px;
    transition: .3s ease all;
  }
}

:host(:hover) {
  --pfe-cta__arrow--Padding: 0 0 0 .5rem;

  background-color: #{pfe-local(BackgroundColor--hover)};
  border-color:     #{pfe-local(BorderColor--hover)};
  cursor:           pointer;

  ::slotted(a) {
    color: #{pfe-local(Color--hover)} !important;
  }

  .pfe-cta--arrow {
    fill: #{pfe-local(Color--hover)};
  }
}

::slotted(:focus) {
  &::before {
    content: "";
    display: block;
    box-sizing: border-box;
    border: 1px solid var(--pfe-cta__inner--BorderColor--focus);
    outline: none;
    position: absolute;
    top: 2px;
    left: 2px;
    bottom: 2px;
    right: 2px;
    border-radius: 2px;
  }

  .pfe-cta--arrow {
    fill: #{pfe-local(Color--focus)};
  }
}

:host(::after) {
  margin-left:        calc(#{pfe-var(content-spacer)} * 0.25); // 1/4 of the base `content-spacer`
}

::slotted(a) {
  display: inline;
  color: #{pfe-local(Color)} !important;

  padding: #{pfe-local(Padding)};
  text-decoration: none;
}

::slotted(a:focus) {
  outline: none !important;
  color: #{pfe-local(Color--focus)} !important;
}

:host(:focus-within) {
  outline: none !important;
  background-color: #{pfe-local(BackgroundColor--focus)};
  border-color:     #{pfe-local(BorderColor--focus)};

  .pfe-cta--arrow {
    fill:           #{pfe-local(Color--focus)};
  }
}


:host([priority]) {
  display: block;
  .pfe-cta--wrapper {
    display: flex;
    flex-flow: row nowrap;
    align-items: center;
  }
}
/// ===========================================================================
/// BELOW THIS POINT, VARIABLE OVERRIDES ONLY







// default link background focus color
:host(:not([priority])) {
  --pfe-cta--BackgroundColor--focus:  rgba(0,102,204, .1);
}

:host([priority="secondary"]) {
  --pfe-cta--BorderRadius:        #{pfe-var(ui--border-radius)};
  --pfe-cta__arrow--Display:      none;

  --pfe-cta--BackgroundColor:          transparent;
  --pfe-cta--BackgroundColor--hover:   #{pfe-color(surface--darkest)};
  --pfe-cta--BackgroundColor--focus:   rgba(21, 21, 21, .1);

  --pfe-cta--BorderColor:        #{pfe-color(surface--darkest)};
  --pfe-cta--BorderColor--hover: #{pfe-color(surface--darkest)};
  --pfe-cta--BorderColor--focus: #{pfe-color(surface--darkest)};

  --pfe-cta__inner--BorderColor:        transparent;
  --pfe-cta__inner--BorderColor--focus: #{pfe-color(surface--darkest)};

  --pfe-cta--Color:        #{pfe-color(surface--base--text)};
  --pfe-cta--Color--hover: #{pfe-color(surface--darkest--text)};
  --pfe-cta--Color--focus: #{pfe-color(surface--base--text)};
  
  --pfe-cta--Padding: #{pfe-var(container-padding)} calc(#{pfe-var(container-padding)} * 2);
}


// Secondary CTA colors when "active" (focus-within on parent, hover on link).
:host([priority="secondary"]:focus-within) {
    --pfe-broadcasted--color--ui-link--hover: #{pfe-color(surface--darkest)};
}

/// ===========================================================================
/// COLOR=ALT

// for secondary only, it uses the link color

:host([priority="secondary"][color="alt"]) {
  --pfe-cta--BackgroundColor:          transparent;
  --pfe-cta--BackgroundColor--hover:   #{pfe-color(ui-link)};
  --pfe-cta--BackgroundColor--focus:   #{pfe-color(surface--lighter)};

  --pfe-cta--BorderColor:              #{pfe-color(ui-link)};
  --pfe-cta--BorderColor--hover:       #{pfe-color(ui-link)};
  --pfe-cta--BorderColor--focus:       #{pfe-color(ui-link)};

  --pfe-cta__inner--BorderColor:        transparent;
  --pfe-cta__inner--BorderColor--focus: #{pfe-color(ui-link)};

  --pfe-cta--Color:                    #{pfe-color(ui-link)};
  --pfe-cta--Color--hover:             #{pfe-color(ui-base--text)};
  --pfe-cta--Color--focus:             #{pfe-color(ui-link)};
}


/// ===========================================================================
// %^&$#@%^&*$#@&$*#@^&$(#@^$&*#@^$&*@#^$&*(@#^$&*#@^$&*#@^$&*#@$#))

/* Broadcast interception! Tune into whatever colors the containers are offering up, per priority level */
// primary sets its own background colors, so it ignores broadcast 
// if there is no broadcast, these are *still* seen by the browser, so set fallbacks here!
// fallback values should match whats above 

//default
:host(:not([priority])) {
  --pfe-cta--Color:            var(--pfe-broadcasted--color--ui-link, #{pfe-color(ui-link)});
  --pfe-cta--Color--hover:     var(--pfe-broadcasted--color--ui-link--hover, #{pfe-color(ui-link--hover)});
  --pfe-cta--Color--focus:     var(--pfe-broadcasted--color--ui-link--focus, #{pfe-color(ui-link--focus)});
}

:host([priority="secondary"]) {
  --pfe-cta--BackgroundColor--focus:  var(--pfe-broadcasted--color--text, rgba(21, 21, 21, .1));
  --pfe-cta--BorderColor:             var(--pfe-broadcasted--color--text, #{pfe-color(surface--darkest)});
  --pfe-cta--Color:                   var(--pfe-broadcasted--color--text, #{pfe-color(surface--darkest)});
  --pfe-cta--Color--focus:            var(--pfe-broadcasted--color--text, #{pfe-color(surface--darkest)});
}
:host([priority="secondary"][color="alt"]) {
  --pfe-cta--BackgroundColor--focus:  #{pfe-color(surface--lighter)};
  --pfe-cta--BorderColor:             var(--pfe-broadcasted--color--ui-link, #{pfe-color(ui-link)});
  --pfe-cta--Color:                   var(--pfe-broadcasted--color--ui-link, #{pfe-color(ui-link)});
  --pfe-cta--Color--focus:            var(--pfe-broadcasted--color--ui-link, #{pfe-color(ui-link)});
}

// %^&$#@%^&*$#@&$*#@^&$(#@^$&*#@^$&*@#^$&*(@#^$&*#@^$&*#@^$&*#@$#))

// No need to define broadcast colors below this point, 
// cta--Color isnt using broadcast anymore from here on out because these attributes trump broadcast #opinionated

/// ===========================================================================
/// PRIMARY CTAs
/// ===========================================================================
:host([priority="primary"]) {
  // Button padding and border radius settings
  --pfe-cta--Padding:      #{pfe-var(container-padding)} calc(#{pfe-var(container-padding)} * 2);
  --pfe-cta--BorderRadius: #{pfe-var(ui--border-radius)};

  // Arrow styles
  --pfe-cta__arrow--Display:  none;
  --pfe-cta--BackgroundColor:          #{pfe-color(surface--accent)};
  --pfe-cta--BackgroundColor--hover:   #{pfe-color(ui-accent--hover)};
  --pfe-cta--BackgroundColor--focus: #{pfe-color(surface--accent)};

  --pfe-cta--BorderColor:        #{pfe-color(surface--accent)};
  --pfe-cta--BorderColor--hover: #{pfe-color(ui-accent--hover)};
  --pfe-cta--BorderColor--focus: #{pfe-color(surface--accent)};

  --pfe-cta__inner--BorderColor:       transparent;
  --pfe-cta__inner--BorderColor--focus: #{pfe-color(surface--accent--text)};

  --pfe-cta--Color:        #{pfe-color(surface--accent--text)};
  --pfe-cta--Color--hover: #{pfe-color(surface--accent--text)};
  --pfe-cta--Color--focus: #{pfe-color(surface--accent--text)};

}


/// ===========================================================================
// COLOR ATTRIBUTE OVERRIDES
//
// Set values of local vars because more 
// colors are needed than whats available in broadcast



/// ===========================================================================
/// ON DARK (deprecated) - this will set 

:host(:not([priority][on="dark"])) {
  --pfe-cta--Color:        #{pfe-color(ui-link--on-dark)};
  --pfe-cta--Color--hover: #{pfe-color(ui-link--on-dark--hover)};
  --pfe-cta--Color--focus: #{pfe-color(ui-link--on-dark--focus)};
}

:host([priority="secondary"][on="dark"]) {
  --pfe-cta--BackgroundColor:          transparent;
  --pfe-cta--BackgroundColor--hover:   #{pfe-color(surface--lightest)};
  --pfe-cta--BackgroundColor--focus:   rgba(255, 255, 255, .95);

  --pfe-cta--BorderColor:              #{pfe-color(surface--lightest)};
  --pfe-cta--BorderColor--hover:       #{pfe-color(surface--lightest)};

  --pfe-cta__inner--BorderColor:        transparent;

  --pfe-cta--Color:               #{pfe-color(surface--darkest--text)};
  --pfe-cta--Color--hover:        #{pfe-color(surface--base--text)};
  --pfe-cta--Color--focus:        #{pfe-color(surface--darkest)};
}

:host([priority="secondary"][on="dark"]:focus-within) {
    --pfe-cta--Color--hover: #{pfe-color(ui-link)};
}

:host([priority="secondary"][color="alt"][on="dark"]) {
  --pfe-cta--BorderColor:      #{pfe-radio(ui-link)};
  --pfe-cta--Color:            #{pfe-radio(ui-link)};
}

/// ===========================================================================
/// COLOR=ACCENT


:host([priority="primary"][color="accent"]) {
  --pfe-cta--Color:        #{pfe-color(surface--accent--text)};
  --pfe-cta--Color--hover: #{pfe-color(surface--accent--text)};
  --pfe-cta--Color--focus: #{pfe-color(surface--accent--text)};;
}

:host([priority="secondary"][color="accent"]) {
  --pfe-cta--BackgroundColor:          transparent;
  --pfe-cta--BackgroundColor--hover:   #{pfe-color(surface--accent)};
  --pfe-cta--BackgroundColor--focus:   #{pfe-color(surface--accent--text)};

  --pfe-cta--BorderColor:              #{pfe-color(surface--accent)};
  --pfe-cta--BorderColor--hover:       #{pfe-color(surface--accent)};
  --pfe-cta--BorderColor--focus:       #{pfe-color(surface--accent)};

  --pfe-cta__inner--BorderColor:        transparent;
  --pfe-cta__inner--BorderColor--focus: #{pfe-color(surface--accent)};

  --pfe-cta--Color:        #{pfe-color(surface--accent)};
  --pfe-cta--Color--hover: #{pfe-color(surface--accent--text)};
  --pfe-cta--Color--focus: #{pfe-color(surface--accent)};;
}
:host([priority="secondary"][color="accent"]:focus-within) {
    --pfe-cta--Color--hover: #{pfe-color(surface--accent)};
}

/// ===========================================================================
/// COLOR=COMPLEMENT

:host([priority="primary"][color="complement"]) {
  --pfe-cta--BackgroundColor:          #{pfe-color(surface--complement)};
  --pfe-cta--BackgroundColor--hover:   rgba(16, 86, 92, .95);
  --pfe-cta--BackgroundColor--focus:   #{pfe-color(surface--complement)};

  --pfe-cta--BorderColor:              #{pfe-color(surface--complement)};
  --pfe-cta--BorderColor--hover:       #{pfe-color(surface--darker)};

  --pfe-cta__inner--BorderColor:        transparent;
  --pfe-cta__inner--BorderColor--focus: #{pfe-color(surface--complement--text)};
  --pfe-cta--BorderColor--focus:        #{pfe-color(surface--darker)};

  --pfe-cta--Color:               #{pfe-color(surface--complement--text)};
  --pfe-cta--Color--hover:        #{pfe-color(surface--complement--text)};
  --pfe-cta--Color--focus:        #{pfe-color(surface--complement--text)};
}

:host([priority="secondary"][color="complement"]) {
  --pfe-cta--BackgroundColor:          transparent;
  --pfe-cta--BackgroundColor--hover:   #{pfe-color(surface--complement)};
  --pfe-cta--BackgroundColor--focus:   #{pfe-color(surface--complement--text)};

  --pfe-cta--BorderColor:              #{pfe-color(surface--complement)};
  --pfe-cta--BorderColor--hover:       #{pfe-color(surface--complement)};

  --pfe-cta__inner--BorderColor:        transparent;
  --pfe-cta__inner--BorderColor--focus: #{pfe-color(surface--complement)};
  --pfe-cta--BorderColor--focus:        #{pfe-color(surface--complement)};

  --pfe-cta--Color:               #{pfe-color(surface--complement)};
  --pfe-cta--Color--hover:        #{pfe-color(surface--complement--text)};
  --pfe-cta--Color--focus:        #{pfe-color(surface--complement)};
}

:host([priority="secondary"][color="complement"]:focus-within) {
    --pfe-cta--Color--hover: #{pfe-color(surface--complement)};
}





