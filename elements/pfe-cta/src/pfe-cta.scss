@import "../../pfe-sass/pfe-sass";

@mixin pfe-cta-focus($inner-border-color) {
  &::before {
    content: "";
    border: 1px solid $inner-border-color;
    outline: none;
    left: 2px;
    top: 2px;
    right: 2px;
    bottom: 2px;
    display: block;
    box-sizing: border-box;
    position: absolute;
    border-radius: 2px;
  }
}

$LOCAL: cta;
$pfe-cta__arrow-size:                        0.313em;

:host {
  display: inline-block;
  font-family: #{pfe-var(font-family)};
  font-size:   #{pfe-var(font-size)};
  font-weight: #{pfe-var(font-weight--bold)};
  line-height: #{pfe-var(line-height)};
  background-color:     var(--pfe-cta--background);
  border-color:         var(--pfe-cta--border);
  color:                var(--pfe-cta--text);

  .pfe-cta--arrow {
    fill: #{pfe-local(Color)};
  }
}

////////////////////////////////////////////////////////////////////////

// Set default color values

:host {
  // Property variables
  --pfe-cta--Padding:      0;
  --pfe-cta--BorderRadius: 0;

  --pfe-cta__arrow--Display:  inline-block;

  // Color settings
  --pfe-cta--background:          transparent;
  --pfe-cta--border:              transparent;
  --pfe-cta--inner-border:        transparent;
  --pfe-cta--Color:               #{pfe-color(ui-link)};

  --pfe-cta--background--hover:   transparent;
  --pfe-cta--border--hover:       transparent;
  --pfe-cta--Color--hover:        #{pfe-color(ui-link--hover)};

  --pfe-cta--background--focus:   rgba(0,102,204, .1);
  --pfe-cta--inner-border--focus: transparent;
  --pfe-cta--Color--focus:         #{pfe-color(ui-link--focus)};
  --pfe-broadcasted--color--ui-link: #{pfe-local(Color)};
  --pfe-broadcasted--color--ui-link--hover: #{pfe-local(Color--hover)};
  --pfe-broadcasted--color--ui-link--focus: #{pfe-local(Color--focus)};


  ::slotted(a) {
    color: var(--pfe-cta--Color);
  }

  ::slotted(a:hover) {
    color: var(--pfe-cta--Color--hover);
  }

  ::slotted(a:focus) {
    color: var(--pfe-cta--Color--focus); 
  }
}

:host([on="dark"]) {
  --pfe-cta--Color:                #{pfe-color(ui-link--on-dark)};
  --pfe-cta--Color--hover:         #{pfe-color(ui-link--on-dark--hover)};
  --pfe-cta--Color--focus:         #{pfe-color(ui-link--on-dark--focus)}; 
}

// Style the slotted link element
:host {
  display: block;
  position: relative;
  transition: all #{pfe-var(animation-timing)};

  line-height: inherit;
  vertical-align:  middle;
  color:            var(--pfe-broadcasted--color--ui-link, #{pfe-color(ui-link)});
  color:            #{pfe-local(Color)};
  background-color: #{pfe-local(background)};

  padding:       #{pfe-local(Padding)};
  border-radius: #{pfe-local(BorderRadius)};
  border:        #{pfe-var(ui--border-width)} #{pfe-var(ui--border-style)} #{pfe-local(border)};

  ::slotted(a){
    text-decoration: none;
  }

  ::slotted(a:focus) {
    outline: none;
  }
}

:host(:hover) {
  background-color: #{pfe-local(background--hover)};
  border-color:     #{pfe-local(border--hover)};
  color:            var(--pfe-broadcasted--color--ui-link--hover, #{pfe-color(ui-link--hover)});;
  color:            #{pfe-local(Color--hover)};
  cursor: pointer;
}

:host(:focus) {
  color: var(--pfe-broadcasted--color--ui-link--focus, #{pfe-color(ui-link--focus)});;
  color: #{pfe-local(Color--focus)};
}

:host(::after) {
  margin-left: calc(#{pfe-var(content-spacer)} * 0.25); // 1/4 of the base `content-spacer`
}

/// ===========================================================================
/// DEFAULT CTAs
/// ===========================================================================

:host(:not([priority])) {
  display: inline-block;
  --pfe-cta--Padding: .6rem 0;

  .pfe-cta--arrow {
    position: relative;
    top: .1rem; 
    width: 13px;
    height: 13px;
    padding: 0 0 0 .375rem;
    transition: .3s ease all;
  }
}

:host(:not([priority]):hover) {
  .pfe-cta--arrow {
    fill: #{pfe-local(Color--hover)};
    padding: 0 0 0 .5rem;
  }
}

:host(:not([priority]):focus-within) {
  background-color: rgba(0, 102, 204, .1);

  .pfe-cta--arrow {
    fill: #{pfe-local(Color--focus)};
  }
}

/// ===========================================================================
/// PRIMARY CTAs
/// ===========================================================================
:host([priority="primary"]) {
  // Button padding and border radius settings
  --pfe-cta--Padding:      #{pfe-var(container-padding)} calc(#{pfe-var(container-padding)} * 2);
  --pfe-cta--BorderRadius: #{pfe-var(ui--border-radius)};
  // Arrow styles
  --pfe-cta__arrow--Display:  none;

  --pfe-cta--background:          #{pfe-color(surface--accent)};
  --pfe-cta--border:              #{pfe-color(surface--accent)};
  --pfe-cta--inner-border:        transparent;
  --pfe-cta--Color:               #{pfe-color(surface--accent--text)};

  --pfe-cta--background--hover:   #d40000;
  --pfe-cta--border--hover:       #{pfe-color(surface--accent)};
  --pfe-cta--Color--hover:        #{pfe-color(surface--accent--text)};

  --pfe-cta--background--focus:   transparent;
  --pfe-cta--inner-border--focus: #{pfe-color(surface--accent--text)};
  --pfe-cta--Color--focus:        #{pfe-color(surface--accent--text)};

  --pfe-broadcasted--color--ui-link: #{pfe-local(Color)};
  --pfe-broadcasted--color--ui-link--hover: #{pfe-local(Color--hover)};
  --pfe-broadcasted--color--ui-link--focus: #{pfe-local(Color--focus)};
}

////////////////////////////////////////////////////////////////////////
:host([priority="primary"]:focus-within) {
  @include pfe-cta-focus(#{pfe-local(inner-border--focus)});
  background-color: #{pfe-local(background)};
  border-color: #{pfe-local(border)};
}

////////////////////////////////////////////////////////////////////////
:host([priority="primary"]:hover) {
  background-color: #{pfe-local(background--hover)};
  border-color: #{pfe-local(border--hover)};
}

/// ===========================================================================
/// SECONDARY CTAs
/// ===========================================================================
:host([priority="secondary"]) {
  // Button padding and border radius settings
  --pfe-cta--Padding:      #{pfe-var(container-padding)} calc(#{pfe-var(container-padding)} * 2);
  --pfe-cta--BorderRadius: #{pfe-var(ui--border-radius)};
  // Arrow styles
  --pfe-cta__arrow--Display:  none;

  --pfe-cta--background:          transparent;
  --pfe-cta--border:              #{pfe-color(surface--darkest)};
  --pfe-cta--inner-border:        transparent;
  --pfe-cta--Color:               #{pfe-color(surface--darkest)};

  --pfe-cta--background--hover:   #{pfe-color(surface--darkest)};
  --pfe-cta--border--hover:       #{pfe-color(surface--darkest)};
  --pfe-cta--Color--hover:        #{pfe-color(surface--darkest--text)};

  --pfe-cta--background--focus:   rgba(21, 21, 21, .1);
  --pfe-cta--inner-border--focus: #{pfe-color(surface--darkest)};
  --pfe-cta--Color--focus:        #{pfe-color(surface--darkest)};

  --pfe-broadcasted--color--ui-link: #{pfe-local(Color)};
  --pfe-broadcasted--color--ui-link--hover: #{pfe-local(Color--hover)};
  --pfe-broadcasted--color--ui-link--focus: #{pfe-local(Color--focus)};
}

:host([priority="secondary"]:focus-within) {
  @include pfe-cta-focus(#{pfe-local(inner-border--focus)});
  background-color: #{pfe-local(background--focus)};
  border-color: #{pfe-local(border)};
  --pfe-cta--Color: #{pfe-color(surface--darkest)};
}

////////////////////////////////////////////////////////////////////////
:host([priority="secondary"]:hover) {
  background-color: #{pfe-local(background--hover)};
  border-color: #{pfe-local(border--hover)};

  ::slotted(a) {
    --pfe-broadcasted--color--ui-link: #{pfe-local(Color--hover)};
    color: #{pfe-local(Color--hover)};
  }
}

:host([secondary-alt]) {
  --pfe-cta--background:          transparent;
  --pfe-cta--border:              #{pfe-color(ui-link)};
  --pfe-cta--inner-border:        transparent;
  --pfe-cta--Color:               #{pfe-color(ui-link)};

  --pfe-cta--background--hover:   #{pfe-color(ui-link)};
  --pfe-cta--border--hover:       #{pfe-color(ui-link)};
  --pfe-cta--Color--hover:        #{pfe-color(ui-base--text)};

  --pfe-cta--background--focus:   rgba(0,102,204, .1);
  --pfe-cta--inner-border--focus: #{pfe-color(ui-link)};
  --pfe-cta--Color--focus:        #{pfe-color(ui-link)};
}

:host([primary-alt]) {
  --pfe-cta--background:          #{pfe-color(surface--lightest)};
  --pfe-cta--border:              #{pfe-color(surface--lightest)};
  --pfe-cta--inner-border:        transparent;
  --pfe-cta--Color:               #{pfe-color(surface--darkest)};

  --pfe-cta--background--hover:   #{pfe-color(surface--border--lightest)}; // probably need a new var for this.
  --pfe-cta--border--hover:       #{pfe-color(surface--lightest)};
  --pfe-cta--Color--hover:        #{pfe-color(surface--darkest)};

  --pfe-cta--background--focus:   #{pfe-color(surface--lightest)};
  --pfe-cta--inner-border--focus: #{pfe-color(surface--darkest)};
  --pfe-cta--Color--focus:        #{pfe-color(surface--darkest)};
}

/// ===========================================================================
/// ON DARK
/// ===========================================================================

:host([priority="secondary"][on="dark"]),
:host([priority="secondary"][color="alt"][on="dark"]) {
  --pfe-cta--background:          transparent;
  --pfe-cta--border:              #{pfe-color(surface--lightest)};
  --pfe-cta--inner-border:        transparent;
  --pfe-cta--Color:               #{pfe-color(surface--lightest)};

  --pfe-cta--background--hover:   #{pfe-color(surface--lightest)};
  --pfe-cta--border--hover:       #{pfe-color(surface--lightest)};
  --pfe-cta--Color--hover:        #{pfe-color(surface--lightest--text)};
  --pfe-cta--background--focus:   rgba(255, 255, 255, .95);
}

:host([priority="secondary"][on="dark"]:hover) {
  ::slotted(a) {
    color: #{pfe-local(Color--hover)};
  }
}

//////////////////////////////
// COLOR OVERRIDES

// Set accent color values  / do we even want to add support for default CTAs + accent?
:host(:not([priority])[color="accent"]) {
  --pfe-cta--Color:                #{pfe-color(surface--accent)};
  --pfe-cta--Color--hover:         #D40000; 
  --pfe-cta--background--focus:   rebeccapurple;
  --pfe-cta--Color--focus:         #{pfe-color(surface--accent)}; 
  --pfe-broadcasted--color--ui-link: #{pfe-local(Color)};
  --pfe-broadcasted--color--ui-link--hover: #{pfe-local(Color--hover)};
  --pfe-broadcasted--color--ui-link--focus: #{pfe-local(Color--focus)};

}

:host([priority="secondary"][color="accent"]) {
  --pfe-cta--background:          transparent;
  --pfe-cta--border:              #{pfe-color(surface--accent)};
  --pfe-cta--inner-border:        transparent;
  --pfe-cta--Color:                #{pfe-color(surface--accent)};

  --pfe-cta--background--hover:   #{pfe-color(surface--accent)};
  --pfe-cta--border--hover:       #{pfe-color(surface--accent)};
  --pfe-cta--Color--hover:        #{pfe-color(surface--accent--text)};

  --pfe-cta--inner-border--focus: #{pfe-color(surface--accent)};
  --pfe-cta--Color--focus:        #{pfe-color(surface--accent)};;
}

// Set complement color values
:host(:not([priority])[color="complement"]) {
  --pfe-cta--background:          transparent;
  --pfe-cta--border:              transparent;
  --pfe-cta--inner-border:        transparent;
  --pfe-cta--Color:               #{pfe-color(surface--complement)};

  --pfe-cta--background--hover:   transparent;
  --pfe-cta--border--hover:       transparent;
  --pfe-cta--Color--hover:        #{pfe-color(surface--complement)};

  --pfe-cta--background--focus:   transparent;
  --pfe-cta--inner-border--focus: transparent;
  --pfe-cta--Color--focus:        #{pfe-color(surface--complement)};

  --pfe-broadcasted--color--ui-link: #{pfe-local(Color)};
  --pfe-broadcasted--color--ui-link--hover: #{pfe-local(Color--hover)};
  --pfe-broadcasted--color--ui-link--focus: #{pfe-local(Color--focus)};
}

:host([priority="primary"][color="complement"]) {
  --pfe-cta--background:          #{pfe-color(surface--complement)};
  --pfe-cta--border:              #{pfe-color(surface--complement)};
  --pfe-cta--inner-border:        transparent;
  --pfe-cta--Color:               #{pfe-color(surface--complement--text)};

  --pfe-cta--background--hover:   #{pfe-color(surface--darker)};
  --pfe-cta--border--hover:       #{pfe-color(surface--darker)};
  --pfe-cta--Color--hover:        #{pfe-color(surface--complement--text)};

  --pfe-cta--background--focus:   transparent;
  --pfe-cta--inner-border--focus: #{pfe-color(surface--complement--text)};
  --pfe-cta--Color--focus:        #{pfe-color(surface--complement--text)};
}

:host([priority="secondary"][color="complement"]) {
  --pfe-cta--background:          transparent;
  --pfe-cta--border:              #{pfe-color(surface--complement)};
  --pfe-cta--inner-border:        transparent;
  --pfe-cta--Color:               #{pfe-color(surface--complement)};

  --pfe-cta--background--hover:   #{pfe-color(surface--complement)};
  --pfe-cta--border--hover:       #{pfe-color(surface--complement)};
  --pfe-cta--Color--hover:        #{pfe-color(surface--complement--text)};

  --pfe-cta--inner-border--focus: #{pfe-color(surface--complement)};
  --pfe-cta--Color--focus:        #{pfe-color(surface--complement)};
}


