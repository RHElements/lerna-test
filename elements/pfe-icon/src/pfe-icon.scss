@import "../../pfe-sass/pfe-sass";

$USE-FALLBACK: true;
$LOCAL: icon;

/// ===========================================================================
/// Component Specific SASS Vars
/// ===========================================================================

// Todo: convert these also
$pfe-icon--padding:       .05em;
$pfe-icon--border-width:  #{pfe-var(ui--border-width)};
$pfe-icon--border-style:  #{pfe-var(ui--border-style)};

@mixin greyscale-fallback() {
  background-color: white !important;

  & svg filter feFlood {
      flood-color: black !important;
  }
}

:host {
  --pfe-icon--Spacing:                 #{pfe-var(container-spacer)};
  --pfe-icon--Size:                    #{pfe-var(icon-size)};
  --pfe-icon--Padding:                 0;
  --pfe-icon--Color:                   #{pfe-radio(color, text)};
  --pfe-icon--BackgroundColor:         transparent;
  --pfe-icon--BorderColor:             transparent;

  position: relative;
  display:  inline-block;
  width:    fit-content;
  line-height: 0;

  @at-root #{&}([data-block]) {
    display: block;
    margin-bottom: #{pfe-local(Spacing)};
    margin-top:    #{pfe-local(Spacing)};

    &:first-child {
      margin-top: 0;
    }
  }

  svg {
    width: #{pfe-local(Size)};
    height:#{pfe-local(Size)};
  }
}

:host(:not(.load-failed)) {
  vertical-align: middle;
  border-radius: 50%;
  background-color: #{pfe-local($cssvar: BackgroundColor, $fallback: transparent)};
  border: #{$pfe-icon--border-width} #{$pfe-icon--border-style} #{pfe-local($cssvar: BorderColor, $fallback: transparent)};
  padding: #{pfe-local($cssvar: Padding, $fallback: 0)};

  @media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) { //ie11
      @include greyscale-fallback();
  }

  @supports (-ms-accelerator:true) {
      /* IE Edge 12+ CSS */
      @include greyscale-fallback();
  }

  @supports (-ms-ime-align:auto) {
      /* IE Edge 16+ CSS */
      @include greyscale-fallback();
  }

  svg image {
    @media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) { //ie11
      filter: none;
    }
  }

  filter feFlood {
    flood-color: #{pfe-local(Color)};
  }

  .pfe-icon--fallback {
    display: none;
  }
}

@for $num from 2 through 4 {
  :host([size="#{$num}x"]) {
    --pfe-icon--Size: #{$num}em;
  }
}

// TODO: Sort out sizing
:host([size="xl"]) {
  --pfe-icon--Size: 100px;
}

:host([size="lg"]) {
  --pfe-icon--Size: 64px;
}

:host([size="md"]) {
  --pfe-icon--Size: 32px;
}

:host([size="sm"]) {
  --pfe-icon--Size: 14px;
}

@each $color in (base, complement, accent) {
  :host([color="#{$color}"]) {
    --pfe-broadcasted--color--text:      #{pfe-color(ui-#{$color})};
  }
}

@each $level in (critical, important, moderate, success, info, default) {
  :host([color="#{$level}"]) {
    --pfe-broadcasted--color--text:      #{pfe-color(feedback--#{$level})};
  }
}

// May need Feedback Darkest colors too.

:host([circled]) {
  --pfe-icon--BackgroundColor:       transparent;
  --pfe-icon--BorderColor:           #{pfe-color(surface--border)};
  --pfe-icon--Padding:               #{$pfe-icon--padding};
}

@each $color in (base, lightest, lighter, darker, darkest, complement, accent) {
  $name: if($color == lighter, light, if($color == darker, dark, $color));
  :host([circled="#{$name}"]) {
    --pfe-icon--BackgroundColor:       #{pfe-color(surface--#{$color})};
    --pfe-icon--BorderColor:           transparent;
    --pfe-broadcasted--color--text:    #{pfe-color(surface--#{$color}--text)};
  }
}

:host(.load-failed) {
  --pfe-icon--BackgroundColor: transparent;
  --pfe-icon--BorderColor: transparent;
  --pfe-icon--Padding: 0;

  ::slotted(*:first-child) {
    margin-top: 0;
  }

  ::slotted(*:last-child) {
    margin-bottom: 0;
  }

  svg image {
    display: none;
  }
}

:host(.load-failed.has-fallback) svg,
:host(.load-failed[on-fail="collapse"]) svg {
  display: none;
}

:host(.load-failed[on-fail="collapse"]) {
  --pfe-icon--Size: 0;
}
