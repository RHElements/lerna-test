// Please see the pfe-sass README for guidance on using these tools
@import "../../pfe-sass/pfe-sass";

$LOCAL: jump-links;

$LOCAL-VARIABLES: (
  horizontal-spacer: calc(#{pfe-var(container-padding)} * 2),
  vertical-spacer: calc(#{pfe-var(container-padding)} * 2),
  BackgroundColor: pfe-var(surface--lightest),
  context: light,
  BorderColor: pfe-var(ui-accent),
  FontSize: pfe-var(FontSize--md),

  // Initialize at mobile breakpoint
  Width: auto,
  offset: calc(var(--pfe-navigation--Height--actual, 0px) + var(--pfe-jump-links-nav--Height--actual, 0px)),

  heading: (
    FontSize: pfe-var(FontSize--sm)
  ),
  link: (
    horizontal-spacer: calc(#{pfe-var(content-spacer)} / 3),
    vertical-spacer: calc(#{pfe-var(content-spacer)} / 6),
  )
);

:host {
  box-sizing: border-box;
  font-family: pfe-var(font-family);
  font-weight: pfe-var(font-weight--normal);
  display: block;
  position: sticky;
  // z-index: pfe-zindex(jumplinks);
  top: 0;
  // top: pfe-local(offset);
  padding: 0;

  background-color: transparent;
  --context: #{pfe-local(context)};

  // @media(min-width: #{pfe-breakpoint(lg)}) {
  //   padding: pfe-local(vertical-spacer) pfe-local(horizontal-spacer);
  // }
}

:host([horizontal]) {
  @media(min-width: #{pfe-breakpoint(lg)}) {
    width: 100%;

    background-color: pfe-local(BackgroundColor, $fallback: pfe-var(surface--lightest));
    --context: #{pfe-local(context, $fallback: pfe-var(surface--lightest--context))};

    z-index: 9;
    border: none;
    padding: 0;
  }
}

:host([sticky="false"]) {
  position: relative !important;
  box-shadow: none !important;
  top: 0 !important;
}

:host([stuck][horizontal]) {
  box-shadow: pfe-var(box-shadow--sm);
}

// Shadow DOM slot tag
.pfe-jump-links-nav__heading {
  margin-top: 0;
  margin-bottom: pfe-var(content-spacer--body--sm);

  :host([horizontal]) & {
    @media(min-width: #{pfe-breakpoint(lg)}) {
      flex-basis: 100%;
      align-self: center;
      justify-content: center;

      display: block;

      margin: 0;
      padding-bottom: pfe-var(container-padding);
      border-bottom: pfe-var(surface--border-width) pfe-var(surface--border-style) pfe-var(surface--border);
    }
  }

}

// Typography styles for default or custom heading
.pfe-jump-links-nav__heading h3,
::slotted([slot="heading"]) {
  color: pfe-broadcasted(text);
  margin: 0;
  font-size: pfe-local(FontSize, $region: heading);
  font-weight: pfe-var(font-weight--normal);
  text-transform: pfe-local(TextTransform, $region: heading, $fallback: uppercase);

  :host([horizontal]) & {
    @media(min-width: #{pfe-breakpoint(lg)}) {
      text-align: pfe-local(TextAlign, $region: heading, $fallback: center);
    }
  }
}

::slotted([slot="logo"]) {
  display: none;

  :host([horizontal]) & {
    @media(min-width: #{pfe-breakpoint(lg)}) {
      position: absolute;
      max-height: calc(#{pfe-var(container-spacer)} * 3.5);
      max-width: calc(#{pfe-var(container-spacer)} * 14);
      top: pfe-var(container-spacer);
      left: calc(#{pfe-var(container-spacer)} * 4);
    }
  }
}

::slotted([slot="cta"]) {
  display: none;

  :host([horizontal]) & {
    @media(min-width: #{pfe-breakpoint(lg)}) {
      position: absolute;
      top:   calc(#{pfe-var(container-spacer)} * 1);
      right: calc(#{pfe-var(container-spacer)} * 4);
    }
  }
}

nav {
  visibility: visible;
  margin: 0;
  list-style: none;
  padding: 0;

  pfe-accordion-panel & {
    width: 100%;
  }

  :host([horizontal]) & {
    @media(min-width: #{pfe-breakpoint(lg)}) {
      display: flex;
      flex-flow: row wrap;
      padding-top: 32px;
      padding-bottom: 8px;
      max-width: pfe-local(Width, $fallback: calc(#{pfe-breakpoint(lg)} - (#{pfe-local(Padding--horizontal)} * 4) ));
    }

    @media screen and (min-width: #{pfe-breakpoint(xl)}) {
      max-width: pfe-local(Width, $fallback: calc(#{pfe-breakpoint(xl)} - (#{pfe-local(Padding--horizontal)} * 4) ));
    }
  }
}

#container {
  padding: 32px 0;
  pfe-accordion-panel & {
    padding: 24px 0;
  }
  
  :host([horizontal]) & {
    @media(min-width: #{pfe-breakpoint(lg)}) {
      padding: 0;
      flex-grow: 1;
      display: flex;
      justify-items: center;
      flex-direction: column;
    }
  }
}

ul {
  padding: 0;
  margin: 0;
  border-left: pfe-var(surface--border-width) pfe-var(surface--border-style) pfe-var(ui-disabled);
  
  :host([horizontal]) & {
    @media(min-width: #{pfe-breakpoint(lg)}) {
      border: none;
      display: block;
      text-align: center;
      flex: 1;
      display: flex;
      padding: 0;
      width: auto;
      margin: 0;
      margin-left: auto;
      margin-right: auto;
    }
  }
}

li {
  display: block;
  position: relative;
  
  margin-left: calc(#{pfe-var(surface--border-width)} * -1);

  :host([horizontal]) &,
  .sub-nav & {
    margin-left: 0;
  }

  :host([horizontal]) & {
    @media(min-width: #{pfe-breakpoint(lg)}) {
      padding: 0;
      display: flex;
      align-items: center;
      margin-top: calc(#{pfe-var(surface--border-width)} * -1);
    }
  }

  &[expand] {
    ul {
      height: auto;
    }

    // .sub-section {
    //   display: table;
    //   height: auto;
    // }
  }

  &::before {
    position: absolute;
    content: "";
    top: 0;
    left: 0;
    width: pfe-var(surface--border-width--heavy);
    height: 100%;
    background-color: transparent;

    :host([horizontal]) & {
      @media(min-width: #{pfe-breakpoint(lg)}) {
        height: pfe-var(surface--border-width--heavy);
        width: 100%;
      }
    }
  }

  &:hover a,
  &[expand] a,
  &[active] a {
    color: pfe-broadcasted(text);
  }

  &:hover::before {
    background-color: pfe-var(ui-disabled);
  }

  &[active]::before {
    background-color: pfe-local(accent, $fallback: pfe-local(BorderColor));
  }
}

a {
  position: relative;
  display: table;

  color: pfe-var(ui-disabled--text);
  font-size: pfe-local(FontSize);
  text-decoration: none;
  line-height: pfe-var(line-height);

  padding: calc(#{pfe-local(vertical-spacer, $region: link)} * 2) calc(#{pfe-local(horizontal-spacer, $region: link)} * 2);

  :host([horizontal]) & {
    @media(min-width: #{pfe-breakpoint(lg)}) {
      padding: 16px;
      text-decoration: none;
      font-size: 16px;
      color: #6a6e73; // pfe-broadcasted(text--muted);
      &[active],
      &:hover {
        color: #151515; // pfe-broadcasted(text);
      }
    }
  }

  // Note: there is no ui-disabled--text--on-dark to pull from
  :host([on="dark"]) & {
    color: #6a6e73; // pfe-var(text--muted--on-dark);
  }

  :host([on="saturated"]) & {
    color: pfe-var(text--muted--on-saturated);
  }

  // &:hover,
  // &[active] {
  //   color: pfe-broadcasted(text);
  // }

  .has-sub-section & {
    padding-bottom: pfe-local(vertical-spacer, $region: link);
  }

  .sub-section & {
    margin-left: calc(#{pfe-var(container-spacer)} * 0.75);
    font-size: calc(#{pfe-local(FontSize)} * 0.85);
    padding: pfe-local(vertical-spacer, $region: link) calc(#{pfe-local(horizontal-spacer, $region: link)} * 2);

    @media(min-width: #{pfe-breakpoint(lg)}) {
      display: none;
    }
    
    &:last-child {
      padding-bottom: pfe-local(horizontal-spacer, $region: link);
    }
  }

  // Creating the custom focus state
  &::after {
    content: "";
    position: absolute;
    width: calc(100% - #{pfe-var(surface--border-width--heavy)});
    height: calc(100% - #{pfe-var(surface--border-width--heavy)});
    top: 0;
    left: 0;
  }

  &:focus {
    outline: none;

    &::after {
      border-radius: pfe-var(surface--border-radius);
      border: 2px pfe-var(surface--border-style) pfe-var(link);
    }
  }
}

ul ul {
  height: 0;

  margin: 0;
  padding: 0;

  overflow-y: hidden;
  // transition: flex pfe-var(animation-speed) pfe-var(animation-timing);
  flex: height 1s linear;

  &,
  li {
    border-left: none !important;
  }
}

pfe-accordion {
  // Custom border
  border: pfe-var(surface--border-width) pfe-var(surface--border-style) pfe-var(ui-disabled);

  --context: light;
  --pfe-accordion--BackgroundColor: #{pfe-var(surface--lightest)};

  :host([color="darkest"]) & {
    --context: dark;
    --pfe-accordion--BackgroundColor: #{pfe-var(surface--darkest)};
    --pfe-theme--color--ui-accent--on-dark: transparent;
  }
}

pfe-accordion,
pfe-accordion-panel[expanded],
pfe-accordion-panel.animating {
  --pfe-accordion--accent: transparent;
  --pfe-accordion--BorderColor: transparent;
  --pfe-accordion--BorderColor--accent: transparent;
  --pfe-accordion--BorderTopWidth: 0;
  --pfe-accordion--BorderBottomWidth: 0;
  --pfe-accordion--panel-container--Padding: 0 0 0 calc(var(--pfe-accordion__base--Padding,var(--pfe-theme--container-spacer,1rem)) * 1.5);
}

:host([hidden]) {
  display: none !important;
}
