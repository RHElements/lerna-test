/* DEMO FILE ONLY, NOT FOR PRODUCTION USE */

@import "../../pfe-sass/pfe-sass";

:root {
    @each $name, $color in $pfe-colors {
        --context--#{$name}: #{$color};
    }
}

@function context_attr($list) {
    @each $item in $list {
        @if str-starts-with($item, "on") {
            @return '[on="#{nth(str-split($item, "-"), 2)}"] ';
        }
    }
    @return "";
}

@function states($list) {
    @each $s in (hover, focus, visited) {
        @if index($list, $s) {
            @return "--#{$s}";
        }
    }
    @return "";
}

@function contexts($list, $color) {
    @if index($list, context) {
        @return $color;
    }
    @return "";
}

@each $name, $color in $pfe-colors {
    $list: str-split($name, $separator: "--");
    $property: background-color;
    $attr: #{context_attr($list)};
    $state: #{states($list)};
    $context: #{contexts($list, $color)};

    @if length($list) > 1 {
        @if index($list, "text") {
            $property: color;
        }
    }
    
    // UI styles, not link
    @if str-starts-with(#{first($list)}, "ui") and not (str-starts-with(#{first($list)}, "link")) {
        #{unquote($attr)}.#{first($list)}#{unquote($state)} {
            #{$property}: var(--context--#{$name}, #{$color});
            @if str-index($string: $name, $substring: "text") == null {
                &::after {
                    content: "#{$name}";
                }
            }
        }
    }

    // Surface styles
    @if index($list, "surface") {
        #{unquote($context)}.#{nth($list, 2)}#{unquote($state)} {
            @if $context != "" and $context != light {
                color: #{pfe-var(text--on-#{$context})};
            } @else if $context == light {
                color: #{pfe-var(text)};
            } @else {
                #{$property}: var(--context--#{$name}, #{$color});
            }
            @if str-index($string: $name, $substring: "text") == null {
                &::after {
                    content: "#{$name}";
                }
            }
        }
    }
}
