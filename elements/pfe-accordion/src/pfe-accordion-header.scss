@import "../../pfe-sass/pfe-sass";

/// ===========================================================================
/// DEFAULT ACCORDION HEADING
/// ===========================================================================
:host {
  // --pfe-expanded--aux:          #{pfe-color(surface--lighter--text)}; //Text color
  // --pfe-expanded--focus:        #{pfe-color(surface--lighter--link--focus)};
  --pfe-expanded--border-left: transparent;

  display: block;
  background: var(--pfe-expanded--main);
  color: var(--pfe-expanded--aux);
  border-left-width: 3px;
  border-left-style: solid;
  border-left-color: var(--pfe-expanded--border-left);
  button {
    @include pfe-trigger-button;

    &[aria-expanded] {
      @include pfe-trigger-expanded;
    }

    &[aria-expanded="false"]::after {
      @include pfe-chevron-expanded-false;
    }

    &[aria-expanded="true"]::after {
      @include pfe-chevron-expanded-true;
    }
  }
  > * {
    margin: 0;
  }
}

:host(:last-of-type) {
}

// Add border bottom to the last button in an accordion set.
:host(:last-of-type) {
  button[aria-expanded="false"] {
    @include pfe-trigger-button-last;
  }  
}
:host([color="dark"]:last-of-type),
:host([on="dark"]:last-of-type) {
  button[aria-expanded="false"] {
    @include pfe-trigger-button-last($theme: dark);
  }  
}

:host(.animating) {
  transition: transform 0.3s #{pfe-var(animation-timing)};
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 1px; // Gives the 1px spacing between each + room for focus border.
}

/// ===========================================================================
/// COLOR OVERRIDES
/// ===========================================================================

:host([color="light"]) {
  @include pfe-trigger-color-light;

  button[aria-expanded="true"] {
    @include pfe-trigger-color-light-borders;
  }
}

:host([color="dark"]),
:host([on="dark"]) {
  @include pfe-trigger-color-dark;
  button {
    @include pfe-trigger-button($theme: dark);
  }
}

:host([color="light"][aria-expanded="true"]) {
  @include pfe-trigger-color-light-expanded;
}

:host([color="dark"][aria-expanded="true"]),
:host([on="dark"][aria-expanded="true"]) {
  @include pfe-trigger-color-dark-expanded;
}

//Todo - turn this into a mixin
:host([on="dark"]) {
  --pfe-broadcasted--color--text:               #{pfe-color(surface--darker--text)};
  --pfe-broadcasted--color--ui-link:            #{pfe-color(surface--darker--link)};
  --pfe-broadcasted--color--ui-link--visited:   #{pfe-color(surface--darker--link--visited)};
  --pfe-broadcasted--color--ui-link--hover:     #{pfe-color(surface--darker--link--hover)};
  --pfe-broadcasted--color--ui-link--focus:     #{pfe-color(surface--darker--link--focus)};
}






