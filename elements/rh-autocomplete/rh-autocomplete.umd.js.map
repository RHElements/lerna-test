{"version":3,"file":"rh-autocomplete.umd.js","sources":["rh-autocomplete.umd.js"],"sourcesContent":["/*\n * Copyright 2018 Red Hat, Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport RHElement from \"../rhelement/rhelement.umd.js\";\n\nconst KEYCODE = {\n  ENTER: 13,\n  DOWN: 40,\n  UP: 38,\n  ESC: 27\n};\n\n// use this variable to debounce api call when user types very fast\nlet throttle = false;\n\nclass RhAutocomplete extends RHElement {\n  get html() {\n    return `\n<style>\n:host {\n  display: block; }\n</style>\n<rh-search-box id=\"input-box\"></rh-search-box>\n<rh-search-droplist id=\"dropdown\"></rh-search-droplist>`;\n  }\n\n  static get tag() {\n    return \"rh-autocomplete\";\n  }\n\n  get templateUrl() {\n    return \"rh-autocomplete.html\";\n  }\n\n  get styleUrl() {\n    return \"rh-autocomplete.scss\";\n  }\n\n  constructor() {\n    super(RhAutocomplete);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this._inputBox = this.shadowRoot.querySelector(\"#input-box\");\n    this._inputBox.value = this.initValue || \"\";\n    this._inputBox.debounce = this.debounce || 500;\n\n    this._dropdown = this.shadowRoot.querySelector(\"#dropdown\");\n    this._dropdown.data = [];\n\n    this.addEventListener(\n      \"rh-input-change-event\",\n      this._autocomplete.bind(this)\n    );\n    this.addEventListener(\"rh-input-blur\", this._closeDroplist.bind(this));\n    this.addEventListener(\"keyup\", this._inputKeyUp.bind(this));\n\n    // these two events, fire search\n    this.addEventListener(\"rh-search-event\", this._closeDroplist.bind(this));\n    this.addEventListener(\n      \"rh-option-selected\",\n      this._optionSelected.bind(this)\n    );\n  }\n\n  disconnectedCallback() {\n    this.removeEventListener(\n      \"rh-input-change-event\",\n      this._autocomplete.bind(this)\n    );\n    this.removeEventListener(\"rh-input-blur\", this._closeDroplist.bind(this));\n    this.removeEventListener(\"keyup\", this._inputKeyUp.bind(this));\n\n    this.removeEventListener(\"rh-search-event\", this._closeDroplist);\n    this.removeEventListener(\n      \"rh-option-selected\",\n      this._optionSelected.bind(this)\n    );\n  }\n\n  static get observedAttributes() {\n    return [\"init-value\", \"loading\"];\n  }\n\n  attributeChangedCallback(attr, oldVal, newVal) {\n    super.attributeChangedCallback();\n\n    switch (attr) {\n      case \"loading\":\n        if (this.loading) {\n          this.shadowRoot\n            .querySelector(\"rh-search-box\")\n            .shadowRoot.querySelector(\".loading\")\n            .removeAttribute(\"hidden\");\n        } else {\n          this.shadowRoot\n            .querySelector(\"rh-search-box\")\n            .shadowRoot.querySelector(\".loading\")\n            .setAttribute(\"hidden\", \"\");\n        }\n        break;\n\n      case \"init-value\":\n        if (this[\"init-value\"] !== newVal) {\n          this[\"init-value\"] = newVal;\n        }\n        break;\n    }\n  }\n\n  set loading(value) {\n    const loading = Boolean(value);\n    if (loading) {\n      this.setAttribute(\"loading\", \"\");\n    } else {\n      this.removeAttribute(\"loading\");\n    }\n  }\n\n  get loading() {\n    return this.hasAttribute(\"loading\");\n  }\n\n  get initValue() {\n    return this.getAttribute(\"init-value\");\n  }\n\n  set initValue(val) {\n    this.setAttribute(\"init-value\", val);\n  }\n\n  get debounce() {\n    return this.getAttribute(\"debounce\");\n  }\n\n  set debounce(val) {\n    this.setAttribute(\"debounce\", val);\n  }\n\n  _closeDroplist() {\n    this._dropdown.open = null;\n\n    this._dropdown.removeAttribute(\"active-index\");\n    this._inputBox.removeAttribute(\"active-index\");\n  }\n\n  _openDroplist() {\n    this._dropdown.setAttribute(\"open\", true);\n\n    this._dropdown.setAttribute(\"active-index\", 0);\n    this._inputBox.setAttribute(\"active-index\", 0);\n  }\n\n  _optionSelected(e) {\n    // update input box with selected value from options list\n    var selectedValue = e.detail.optionValue;\n    this._reset(selectedValue);\n\n    // send search request\n    this._dispatchSearchEvent(selectedValue);\n  }\n\n  _dispatchSearchEvent(searchQuery) {\n    this.dispatchEvent(\n      new CustomEvent(\"rh-search-event\", {\n        detail: { searchValue: searchQuery },\n        bubbles: true,\n        composed: true\n      })\n    );\n  }\n\n  _autocomplete(event) {\n    let input = event.detail.inputValue;\n    this._sendAutocompleteRequest(input);\n  }\n\n  _sendAutocompleteRequest(input) {\n    this.autocompleteRequest(\n      { query: input },\n      this._autocompleteCallback.bind(this)\n    );\n  }\n\n  _autocompleteCallback(response) {\n    this._dropdown.data = response;\n    this._dropdown.reflow = true;\n    response.length !== 0 ? this._openDroplist() : this._closeDroplist();\n  }\n\n  _reset(selectedValue) {\n    this._inputBox.value = selectedValue;\n    this._dropdown.activeIndex = null;\n    this._dropdown.data = [];\n    this._closeDroplist();\n  }\n\n  _inputKeyUp(e) {\n    let key = e.keyCode;\n\n    if (\n      this._dropdown.data.length === 0 &&\n      key !== KEYCODE.DOWN &&\n      key !== KEYCODE.UP &&\n      key !== KEYCODE.ENTER &&\n      key !== KEYCODE.ESC\n    )\n      return;\n\n    let activeIndex = parseInt(this._dropdown.activeIndex, 10) || null;\n    let selectedOption = this._dropdown.selectedOption;\n\n    let optionsLength = this._dropdown.data.length;\n\n    if (key == KEYCODE.ESC) {\n      this._closeDroplist();\n    } else if (key === KEYCODE.UP) {\n      activeIndex -= 1;\n\n      if (activeIndex < 0) {\n        activeIndex = optionsLength - 1;\n      }\n    } else if (key === KEYCODE.DOWN) {\n      activeIndex += 1;\n\n      if (activeIndex > optionsLength - 1) {\n        activeIndex = 0;\n      }\n    } else if (key === KEYCODE.ENTER) {\n      let selectedValue;\n      if (activeIndex) {\n        selectedValue = this._dropdown.getAttribute(\"selected-option\");\n        this._reset(selectedValue);\n      } else {\n        selectedValue = this._inputBox.value;\n      }\n\n      // send search request\n      this._dispatchSearchEvent(selectedValue);\n      return;\n    }\n\n    this._dropdown.activeIndex = activeIndex;\n    this._inputBox.activeIndex = activeIndex;\n  }\n}\n\n/*\n* - Attributes ------------------------------------\n* value        | input box value\n* active-index | Set selected option\n* debounce     | debounce value for firing rh-input-change-event event\n\n* - Events ----------------------------------------\n* rh-input-change-event | Fires when user type in input box\n* rh-input-blur         | Fires when input box blurs\n*/\nclass RhSearchBox extends RHElement {\n  get html() {\n    return `\n<style>\n:host {\n  position: relative;\n  display: flex; }\n\n.sr-only {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  border: 0; }\n\ninput {\n  width: 100%;\n  flex: 1;\n  box-shadow: inset 0 1px 0px rgba(0, 0, 0, 0.075) !important;\n  padding-left: 5px;\n  padding-right: 30px;\n  border-radius: 0;\n  background: #fff;\n  border: 1px solid var(--rh-theme--color--surface--border--lightest, #ececec);\n  font-size: 16px;\n  \n  line-height: 24px;\n  \n  height: 35px;\n  margin: 0px;\n  transition: border-color ease-in-out 0.15s,box-shadow ease-in-out 0.15s; }\n\ninput:focus,\ninput:focus ~ button.search-button {\n  border-color: #66afe9;\n  outline: 0; }\n\ninput[type=\"search\"],\nbutton {\n  -webkit-appearance: none; }\n\ninput[type=\"search\"]::-ms-clear {\n  display: none; }\n\ninput[type=\"search\"]::-webkit-search-cancel-button,\ninput[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none; }\n\nbutton {\n  font-size: 27px;\n  color: #cccccc;\n  background-color: #fff;\n  font-weight: 600;\n  border: none;\n  line-height: 20px;\n  position: absolute;\n  top: 45%;\n  transform: translate(-50%, -50%);\n  padding: 0px;\n  margin: 0px; }\n\nbutton.clear-search {\n  right: 24px; }\n\nbutton.clear-search:hover {\n  opacity: 1;\n  color: #06c; }\n\nbutton.search-button {\n  right: 0px;\n  width: 16px; }\n\nbutton.search-button svg {\n  fill: #06c; }\n\nbutton.search-button:hover svg,\nbutton.search-button:focus svg {\n  fill: #004080; }\n\nbutton.search-button[disabled=\"true\"] svg {\n  fill: #ccc; }\n\nbutton[disabled=\"true\"] {\n  color: #ccc; }\n\n.loading {\n  position: absolute;\n  width: 25px;\n  right: 42px;\n  top: 60%;\n  transform: translate(-50%, -50%); }\n</style>\n<input placeholder=\"Enter Your Search Term\"\n  role=\"combobox\"\n  aria-label=\"Search\"\n  aria-autocomplete=\"both\"\n  aria-haspopup=\"true\"\n  type=\"search\"\n  autocomplete=\"off\"\n  autocorrect=\"off\"\n  autocapitalize=\"off\"\n  spellcheck=\"false\"\n  class=\"form-control\"/>\n\n<span class=\"loading\" aria-hidden=\"true\" hidden>\n  <svg viewBox=\"0 0 40 40\" enable-background=\"new 0 0 40 40\">\n  <path opacity=\"0.2\" fill=\"#000\" d=\"M20.201,5.169c-8.254,0-14.946,6.692-14.946,14.946c0,8.255,6.692,14.946,14.946,14.946\n    s14.946-6.691,14.946-14.946C35.146,11.861,28.455,5.169,20.201,5.169z M20.201,31.749c-6.425,0-11.634-5.208-11.634-11.634\n    c0-6.425,5.209-11.634,11.634-11.634c6.425,0,11.633,5.209,11.633,11.634C31.834,26.541,26.626,31.749,20.201,31.749z\"/>\n  <path fill=\"#000\" d=\"M26.013,10.047l1.654-2.866c-2.198-1.272-4.743-2.012-7.466-2.012h0v3.312h0\n    C22.32,8.481,24.301,9.057,26.013,10.047z\">\n    <animateTransform attributeType=\"xml\"\n      attributeName=\"transform\"\n      type=\"rotate\"\n      from=\"0 20 20\"\n      to=\"360 20 20\"\n      dur=\"0.5s\"\n      repeatCount=\"indefinite\"/>\n    </path>\n  </svg>\n</span>\n\n<button type=\"button\" class=\"clear-search\" aria-label=\"clear search query\">\n  &times;\n</button>\n<button class=\"search-button\" type=\"button\" aria-label=\"Search\">\n  <svg viewBox=\"0 0 512 512\">\n    <path d=\"M256.233,5.756c-71.07,15.793-141.44,87.863-155.834,159.233c-11.495,57.076,0.3,111.153,27.688,154.335L6.339,441.172\n  c-8.596,8.596-8.596,22.391,0,30.987l33.286,33.286c8.596,8.596,22.391,8.596,30.987,0L192.26,383.796\n  c43.282,27.688,97.559,39.683,154.734,28.188c79.167-15.893,142.04-77.067,159.632-155.934\n  C540.212,104.314,407.968-27.93,256.233,5.756z M435.857,208.37c0,72.869-59.075,131.944-131.944,131.944\n  S171.969,281.239,171.969,208.37S231.043,76.426,303.913,76.426S435.857,135.501,435.857,208.37z\"/>\n  </svg>\n</button>`;\n  }\n\n  static get tag() {\n    return \"rh-search-box\";\n  }\n\n  get templateUrl() {\n    return \"rh-search-box.html\";\n  }\n\n  get styleUrl() {\n    return \"rh-search-box.scss\";\n  }\n\n  constructor() {\n    super(RhSearchBox);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    // input box\n    this._input = this.shadowRoot.querySelector(\"input\");\n    this._input.addEventListener(\"input\", this._inputChanged.bind(this));\n    this._input.addEventListener(\"blur\", this._inputBlured.bind(this));\n\n    // clear button\n    this._clearBtn = this.shadowRoot.querySelector(\".clear-search\");\n    this._clearBtn.addEventListener(\"click\", this._clear.bind(this));\n\n    // search button\n    this._searchBtn = this.shadowRoot.querySelector(\".search-button\");\n    this._searchBtn.addEventListener(\"click\", this._search.bind(this));\n  }\n\n  disconnectedCallback() {\n    this._input.removeEventListener(\"input\", this._inputChanged);\n    this._input.removeEventListener(\"blur\", this._inputBlured);\n\n    this._clearBtn.removeEventListener(\"click\", this._clear);\n    this._searchBtn.removeEventListener(\"click\", this._search);\n  }\n\n  static get observedAttributes() {\n    return [\"value\", \"active-index\"];\n  }\n\n  get value() {\n    return this.getAttribute(\"value\");\n  }\n\n  set value(val) {\n    if (val === \"\") this._clear();\n    this.setAttribute(\"value\", val);\n  }\n\n  get activeIndex() {\n    return parseInt(this.getAttribute(\"active-index\"), 10);\n  }\n\n  set activeIndex(val) {\n    this.setAttribute(\"active-index\", val);\n  }\n\n  get debounce() {\n    return this.getAttribute(\"debounce\");\n  }\n\n  set debounce(val) {\n    this.setAttribute(\"debounce\", val);\n  }\n\n  attributeChangedCallback(attr, oldVal, newVal) {\n    super.attributeChangedCallback();\n\n    if (attr === \"value\") {\n      this._input.value = newVal;\n\n      if (newVal === \"\") {\n        this._searchBtn.setAttribute(\"disabled\", true);\n      } else {\n        this._searchBtn.removeAttribute(\"disabled\");\n        this._clearBtn.removeAttribute(\"hidden\");\n      }\n    }\n\n    if (attr === \"active-index\") {\n      if (newVal) {\n        // add aria-activedescendant on input box\n        this._input.setAttribute(\"aria-activedescendant\", \"option-\" + newVal);\n      } else {\n        this._input.setAttribute(\"aria-activedescendant\", \"\");\n      }\n    }\n  }\n\n  _inputBlured() {\n    this.dispatchEvent(\n      new CustomEvent(\"rh-input-blur\", {\n        bubbles: true,\n        composed: true\n      })\n    );\n  }\n\n  _inputChanged() {\n    this.value = this._input.value;\n\n    if (throttle === false) {\n      throttle = true;\n\n      window.setTimeout(() => {\n        this.dispatchEvent(\n          new CustomEvent(\"rh-input-change-event\", {\n            detail: { inputValue: this._input.value },\n            bubbles: true,\n            composed: true\n          })\n        );\n\n        throttle = false;\n      }, parseInt(this.debounce, 10) || 500);\n    }\n  }\n\n  _clear() {\n    this._input.value = \"\";\n    this._clearBtn.setAttribute(\"hidden\", true);\n    this._searchBtn.setAttribute(\"disabled\", true);\n    this._input.focus();\n  }\n\n  _search(event) {\n    this.dispatchEvent(\n      new CustomEvent(\"rh-search-event\", {\n        detail: { searchValue: this._input.value },\n        bubbles: true,\n        composed: true\n      })\n    );\n  }\n}\n\n/*\n* - Attributes ------------------------------------\n* open               | Set when the combo box dropdown is open\n* active-index       | Set selected option\n* reflow             | Re-renders the dropdown\n\n* - Events ----------------------------------------\n* rh-option-selected | Fires when an option is selected.\n  event.detailes.selectedValue contains the selected value.\n*/\nclass RhSearchDroplist extends RHElement {\n  get html() {\n    return `\n<style>\n:host {\n  position: relative;\n  display: none;\n  font-family: var(--rh-theme--font-family);\n  font-size: var(--rh-theme--font-size);\n  line-height: var(--rh-theme--line-height); }\n\n:host([open]) {\n  display: block; }\n\n.sr-only {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  border: 0; }\n\n.droplist {\n  position: absolute;\n  top: 100%;\n  left: 0px;\n  right: 0px;\n  height: 250px;\n  z-index: 9999;\n  overflow-y: scroll;\n  overflow-x: hidden;\n  border: 1px solid #ccc;\n  background-color: #fff; }\n\ninput {\n  font-family: var(--rh-theme--font-family);\n  font-size: var(--rh-theme--font-size);\n  line-height: var(--rh-theme--line-height); }\n\nul {\n  font-family: var(--rh-theme--font-family);\n  font-size: var(--rh-theme--font-size);\n  line-height: var(--rh-theme--line-height);\n  border-top: none;\n  margin: 0px;\n  padding: 0px;\n  list-style: none;\n  cursor: pointer; }\n  ul li {\n    display: list-item;\n    cursor: pointer;\n    padding: 7px 10px;\n    margin: 2px 0px 2px 0px; }\n    ul li.active {\n      background-color: var(--rh-theme--color--surface--lighter, #ececec); }\n</style>\n<div class=\"suggestions-aria-help sr-only\" aria-hidden=\"false\" role=\"status\"></div>\n<div class=\"droplist\">\n  <ul role=\"listbox\" tabindex=\"-1\">\n  </ul>\n</div>`;\n  }\n\n  static get tag() {\n    return \"rh-search-droplist\";\n  }\n\n  get templateUrl() {\n    return \"rh-search-droplist.html\";\n  }\n\n  get styleUrl() {\n    return \"rh-search-droplist.scss\";\n  }\n\n  constructor() {\n    super(RhSearchDroplist);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this._ariaAnnounce = this.shadowRoot.querySelector(\n      \".suggestions-aria-help\"\n    );\n\n    this._ul = this.shadowRoot.querySelector(\"ul\");\n    this._ul.addEventListener(\"mousedown\", this._optionSelected.bind(this));\n  }\n\n  disconnectedCallback() {\n    this._ul.removeEventListener(\"mousedown\", this._optionSelected);\n  }\n\n  _optionSelected(e) {\n    if (e.target.tagName === \"LI\") {\n      this.dispatchEvent(\n        new CustomEvent(\"rh-option-selected\", {\n          detail: { optionValue: e.target.innerText },\n          bubbles: true,\n          composed: true\n        })\n      );\n    }\n  }\n\n  _renderOptions() {\n    this.reflow = \"\";\n\n    let options = this.data;\n\n    this._ariaAnnounce.innerHTML = `There are ${\n      options.length\n    } suggestions. Use the up and down arrows to browse.`;\n    this._ariaAnnounce.setAttribute(\"aria-live\", \"polite\");\n\n    this._ul.innerHTML = `${options\n      .map((item, index) => {\n        return `<li id=\"option-${index}\" class=\"${\n          index === 0 ? \"active\" : \"\"\n        }\" role=\"option\" tabindex=\"-1\" value=\"${item}\">${item}</li>`;\n      })\n      .join(\"\")}`;\n  }\n\n  static get observedAttributes() {\n    return [\"open\", \"reflow\", \"active-index\", \"selected-option\"];\n  }\n\n  attributeChangedCallback(attr, oldVal, newVal) {\n    super.attributeChangedCallback();\n\n    if (this[name] !== newVal) {\n      this[name] = newVal;\n    }\n\n    if (attr === \"active-index\" && oldVal !== newVal) {\n      this._activeIndexChanged();\n    }\n\n    if (attr === \"reflow\") {\n      this._renderOptions();\n    }\n  }\n\n  _activeIndexChanged() {\n    if (isNaN(this.activeIndex) || this.data.length === 0) return;\n\n    // remove active class\n    this._ul.querySelector(\".active\").classList.remove(\"active\");\n\n    // add active class to selected option\n    let activeOption = this._ul.querySelector(\n      \"li:nth-child(\" + (this.activeIndex + 1) + \")\"\n    );\n    this.selectedOption = activeOption.innerHTML;\n    activeOption.classList.add(\"active\");\n\n    // scroll to selected element when selected item with keyboard is out of view\n    let ulWrapper = this.shadowRoot.querySelector(\".droplist\");\n    let activeOptionHeight = activeOption.offsetHeight;\n    activeOptionHeight += parseInt(\n      window.getComputedStyle(activeOption).getPropertyValue(\"margin-bottom\")\n    );\n    ulWrapper.scrollTop =\n      activeOption.offsetTop - ulWrapper.offsetHeight + activeOptionHeight;\n  }\n\n  get open() {\n    return this.shadowRoot.hasAttribute(\"open\");\n  }\n\n  set open(val) {\n    val = Boolean(val);\n\n    if (val) {\n      this.setAttribute(\"open\", \"\");\n    } else {\n      this.removeAttribute(\"open\");\n    }\n  }\n\n  get activeIndex() {\n    return parseInt(this.getAttribute(\"active-index\"), 10);\n  }\n\n  set activeIndex(val) {\n    this.setAttribute(\"active-index\", val);\n  }\n\n  get selectedOption() {\n    this.getAttribute(\"selected-option\");\n  }\n\n  set selectedOption(val) {\n    this.setAttribute(\"selected-option\", val);\n  }\n\n  get reflow() {\n    return this.hasAttribute(\"reflow\");\n  }\n\n  set reflow(val) {\n    val = Boolean(val);\n\n    if (val) {\n      this.setAttribute(\"reflow\", \"\");\n    } else {\n      this.removeAttribute(\"reflow\");\n    }\n  }\n}\n\nRHElement.create(RhSearchBox);\nRHElement.create(RhSearchDroplist);\nRHElement.create(RhAutocomplete);\n\nexport default RhAutocomplete;\n"],"names":["KEYCODE","throttle","RhAutocomplete","RHElement","_inputBox","this","shadowRoot","querySelector","value","initValue","debounce","_dropdown","data","addEventListener","_autocomplete","bind","_closeDroplist","_inputKeyUp","_optionSelected","removeEventListener","attr","oldVal","newVal","loading","removeAttribute","setAttribute","open","e","selectedValue","detail","optionValue","_reset","_dispatchSearchEvent","searchQuery","dispatchEvent","CustomEvent","searchValue","event","input","inputValue","_sendAutocompleteRequest","autocompleteRequest","query","_autocompleteCallback","response","reflow","length","_openDroplist","activeIndex","key","keyCode","parseInt","optionsLength","selectedOption","getAttribute","Boolean","hasAttribute","val","RhSearchBox","_input","_inputChanged","_inputBlured","_clearBtn","_clear","_searchBtn","_search","setTimeout","_this3","focus","RhSearchDroplist","_ariaAnnounce","_ul","target","tagName","innerText","options","innerHTML","map","item","index","join","name","_activeIndexChanged","_renderOptions","isNaN","classList","remove","activeOption","add","ulWrapper","activeOptionHeight","offsetHeight","window","getComputedStyle","getPropertyValue","scrollTop","offsetTop","create"],"mappings":"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"}