import t from"../pfelement/pfelement.min.js";import e from"numeral";
/*!
 * PatternFly Elements: PfeNumber 1.0.0-prerelease.24
 * @license
 * Copyright 2019 Red Hat, Inc.
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 * 
*/
const r={abbrev:"0a",ordinal:"0o",percent:"0%",bytes:"0[.][00] ib",e:"0[.00]e+0",thousands:"0,0[.][00]"};e.locales.en.delimiters.thousands="â€¯";class s extends t{static get version(){return"1.0.0-prerelease.24"}get html(){return"<style>:host{display:inline;white-space:nowrap}</style><span></span>"}static get tag(){return"pfe-number"}get styleUrl(){return"pfe-number.scss"}get templateUrl(){return"pfe-number.html"}static get observedAttributes(){return["number","format","type"]}constructor(){super(s)}connectedCallback(){super.connectedCallback(),this.connected=!0,this._determineFormat(),this._setInitialNumber()}attributeChangedCallback(t,e,r){switch(super.attributeChangedCallback(...arguments),t){case"type":this._determineFormat();break;case"format":this._updateNumber(this.getAttribute("number"),r);break;case"number":this._updateNumber(r,this.getAttribute("format"))}}_setInitialNumber(){const t=!Number.isNaN(parseFloat(this.getAttribute("number"))),e=!Number.isNaN(parseFloat(this.textContent));t?this.setAttribute("number",this.getAttribute("number")):e&&this.setAttribute("number",this.textContent)}_determineFormat(){let t=this.getAttribute("type");t&&r[t]?this.setAttribute("format",r[t]):this.setAttribute("format",this.getAttribute("format")||"0")}_updateNumber(t,e){this.shadowRoot.querySelector("span").textContent=this._format(t,e)}_format(t,r){return e(t).format(r)}}t.create(s);
//# sourceMappingURL=pfe-number.min.js.map
