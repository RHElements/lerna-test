$component: "cta";
@import "../../rh-sass/rh-sass";

/// ===========================================================================
/// Component Specific SASS Vars
/// ===========================================================================

$rh-cta--arrow-size:                        0.313em; // Was ~5px at 16px
$rh-cta--animation-timing:                  $rh-global--animation-timing;

// Define CSS Vars
$cta-defaults-custom: (
  "arrow--spacing": --rh-theme--spacing--xxs $rh-global--spacer--xxs,
  "padding-y": 0,
  "padding-x": 0,
  "borderRadius": 0,
  "borderWidth": 0,
  "textDecoration": underline
);

$cta-defaults: (
  "link-color": $rh-global--link-color,
  "link-color--visited": $rh-global--link-color--visited,
  "link-color--hover": $rh-global--link-color--hover,
  "link-color--focus": $rh-global--link-color--focus
);

/// ===========================================================================
/// Styles
/// ===========================================================================

// Setup Default CTA
:host {
  display: inline-block;

  @include rh-define-vars($cta-defaults-custom, $custom-theme: true);

  @include rh-define-vars($cta-defaults);

  & ::slotted(a) {
    color: rh-var("link-color");

    padding: rh-var("padding-y") rh-var("padding-x");
    text-decoration: rh-var("textDecoration");
    border: rh-var("BorderWidth") solid transparent;
    border-radius: rh-var("BorderRadius");
    transition: all 250ms $rh-cta--animation-timing;
    background: rh-var("color");
    color: rh-var("text-color");

    &::after {
      margin-left: rh-var("arrow--spacing");
      vertical-align: middle;
      @include rh-arrow($type: right, $color: rh-var("link-color"), $width: $rh-cta--arrow-size, $height: $rh-cta--arrow-size, $pseudo: true);
    }
  }

  // Setup Default CTA Visited
  & ::slotted(a:visited) {
    color: rh-var("link-color--visited");

    &::after {
      @include rh-arrow-color($color: rh-var("link-color--visited"));
    }
  }
  // Setup Default CTA Hover
  & ::slotted(a:hover) {
    color: rh-var("link-color--hover");

    &::after {
      @include rh-arrow-color($color: rh-var("link-color--hover"));
    }
  }
  // Setup Default CTA Focus
  & ::slotted(a:focus) {
    color: rh-var("link-color--focus");

    &::after {
      @include rh-arrow-color($color: rh-var("link-color--focus"));
    }
  }
}

:host(.primary) {
  --rh-cta--color: $rh-global--link-color;
  --rh-cta--color--hover: $rh-global--link-color--hover;
  --rh-cta--color--focus: $rh-global--link-color--focus;
  --rh-cta--color--visited: $rh-global--link-color--visited;
}

:host(.secondary) {
  --rh-cta--color: $rh-global--color--gray-iron;
  --rh-cta--color--hover: darken($rh-global--color--gray-iron, 10%);
  --rh-cta--color--focus: darken($rh-global--color--gray-iron, 10%);
  --rh-cta--color--visited: $rh-global--link-color--visited;
}

:host(.accent) {
  --rh-cta--color: $rh-global--color--red;
  --rh-cta--color--hover: darken($rh-global--color--red, 10%);
  --rh-cta--color--focus: darken($rh-global--color--red, 10%);
  --rh-cta--color--visited: $rh-global--link-color--visited;
}

// Setup Inverted Default CTA
:host([inverted]) {
  --rh-cta--color: $rh-global--link-color--inverted;
  --rh-cta--color--hover: $rh-global--link-color--inverted--hover;
  --rh-cta--color--focus: $rh-global--link-color--inverted--focus;
  --rh-cta--color--visited: $rh-global--link-color--inverted--visited;
}

:host([inverted].primary) {
  --rh-cta--color: $rh-global--link-color--inverted;
  --rh-cta--color--hover: $rh-global--link-color--inverted--hover;
  --rh-cta--color--focus: $rh-global--link-color--inverted--focus;
  --rh-cta--color--visited: $rh-global--link-color--inverted--visited;
}

:host([inverted].secondary) {
  --rh-cta--color: $rh-global--color--white;
  --rh-cta--color--hover: darken($rh-global--color--white, 10%);
  --rh-cta--color--focus: darken($rh-global--color--white, 10%);
  --rh-cta--color--visited: $rh-global--link-color--inverted--visited;
}

:host([inverted].accent) {
  --rh-cta--color: lighten($rh-global--color--red, 10%);
  --rh-cta--color--hover: lighten($rh-global--color--red, 20%);
  --rh-cta--color--focus: lighten($rh-global--color--red, 20%);
  --rh-cta--color--visited: $rh-global--link-color--inverted--visited;
}

// CTA Solid
:host([solid]) {
  $cta-solid: (
    "padding-y": --rh-theme--spacing--xs $rh-global--spacer--xs,
    "padding-x": --rh-theme--spacing--lg $rh-global--spacer--lg,
    "BorderRadius": --rh-theme--cta--BorderRadius "5em !default",
    "BorderWidth": --rh-theme--cta--BorderWidth $rh-global--border--BorderWidth,
    "color": --rh-theme--color $rh-global--color--gray-batman,
    "text-color": --rh-theme--text-color $rh-global--color--white,
    "color--hover": --rh-theme--color--hover #{darken($rh-global--color--gray-batman, 10%)},
    "text-color--hover": --rh-theme--text-color--hover $rh-global--color--white,
  );

  @include rh-define-vars($cta-solid, $custom-theme: true);

  &::slotted(a) {
    display: inline-block;
    // padding: rh-var("solid--padding-y") rh-var("solid--padding-x");
    // text-decoration: none;
    // border: rh-var("solid--BorderWidth") solid transparent;
    // border-radius: rh-var("solid--BorderRadius");
    // transition: all 250ms $rh-cta--animation-timing;
    // background: rh-var("color");
    // color: rh-var("text-color");

    &::after {
      display: none;
    }
  }

  & ::slotted(a:hover),
  & ::slotted(a:focus) {
    background: rh-var("color--hover") !important;
    color: rh-var("text-color--hover") !important;
  }
}

:host([solid].primary) {
  --rh-cta--color: $rh-global--color--blue-azure;
  --rh-cta--text-color: $rh-global--color--white;
  --rh-cta--color--hover: darken($rh-global--color--blue-azure, 10%);
  --rh-cta--text-color--hover: $rh-global--color--white;
}

:host([solid].secondary) {
  --rh-cta--color: $rh-global--color--gray-iron;
  --rh-cta--text-color: $rh-global--color--white;
  --rh-cta--color--hover: darken($rh-global--color--gray-iron, 10%);
  --rh-cta--text-color--hover: $rh-global--color--white;
}

:host([solid].accent) {
  --rh-cta--color: $rh-global--color--red;
  --rh-cta--text-color: $rh-global--color--white;
  --rh-cta--color--hover: darken($rh-global--color--red, 10%);
  --rh-cta--text-color--hover: $rh-global--color--white;
}

// CTA Solid
:host([solid][inverted]) {
  --rh-cta--color: $rh-global--color--red;
  --rh-cta--text-color: $rh-global--color--white;
  --rh-cta--color--hover: darken($rh-global--color--red, 10%);
  --rh-cta--text-color--hover: $rh-global--color--white;
}

// CTA Unfilled
:host([unfilled]) {
  &::slotted(a) {
    background: transparent !important;
  }

  // &::slotted(a:hover),
  // &::slotted(a:focus) {
  //   background: transparent !important;
  // }
}
