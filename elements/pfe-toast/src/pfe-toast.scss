@import "../../pfe-sass/pfe-sass";
$LOCAL: toast;

:host {
  // local variables
  --pfe-toast--Top: 50px;
  --pfe-toast--MaxWidth: 500px;
  --pfe-toast--MinWidth: 250px;
  --pfe-toast--Right: 50px;
  --pfe-toast--Right--offset: 50px; // needed with box-shadow
  --pfe-toast__container--BackgroundColor: #fff;
  --pfe-toast__container--BoxShadow: rgba(3, 3, 3, 0.13) 0px 3px 7px 3px, rgba(3, 3, 3, 0.12) 0px 11px 24px 16px;
  --pfe-toast__container--Color: #151515;
  --pfe-toast__container--Padding: 1rem;
  --pfe-toast__close--svg--Fill: #151515;
  --pfe-toast__close--svg--hover--Fill: #151515;
  --pfe-toast__close--svg--Height: 12px;
  --pfe-toast__close--svg--Width: 12px;
  --pfe-toast__close--PaddingTop: 0;
  --pfe-toast__close--PaddingRight: 0;
  --pfe-toast__close--PaddingBottom: 0;
  --pfe-toast__close--PaddingLeft: 0;

  // flex parent props
  align-items: stretch;
  display: flex;
  flex-flow: row wrap;
  justify-content: flex-start;
  
  // animation
  position: absolute;
  right: calc(-1 * (#{pfe-local(MaxWidth)} + #{pfe-local(Right--offset)}));
  top: #{pfe-local(Top)};
  transition: right 0.5s ease-in-out;
  will-change: right;
  
  max-width: #{pfe-local(MaxWidth)}; // media queries?
  min-width: #{pfe-local(MinWidth)};
}

:host([hidden]) {
  display: none;
}

:host(.open) {
  right: #{pfe-local(Right)};
}

:host(:not(.open)){
  right: calc(-1 * (#{pfe-local(MaxWidth)} + #{pfe-local(Right--offset)}));
}

::slotted(:first-child) {
  margin-top: 0;
}

::slotted(button) {
  background: none;
  border-radius: 0;
  display: inline-block;
  margin-bottom: 0;
  margin-right: 1rem;
  padding: .5rem .75rem;
  text-align: center;
}

.pfe-toast {
  &__container {
    // flex child props
    align-self: flex-start;
    flex: 1 1 auto;

    // flex parent props
    align-items: flex-start;
    display: flex;
    flex-flow: row nowrap;
    justify-content: flex-start;

    background-color: pfe-local($cssvar: BackgroundColor, $region: container);
    box-shadow: pfe-local($cssvar: BoxShadow, $region: container);
    color: pfe-local($cssvar: Color, $region: container);
    padding: pfe-local($cssvar: Padding, $region: container);
  }
  &__content {
    // flex child props
    flex: 1 1 auto;
  }
  &__close {
    // flex child props
    flex: 0 0 auto;

    background-color: transparent;
    border: none;
    cursor: pointer;
    margin: 0;
    padding: var(--pfe-toast__close--PaddingTop) var(--pfe-toast__close--PaddingRight) var(--pfe-toast__close--PaddingBottom) var(--pfe-toast__close--PaddingLeft); 
    
    & > svg {
      fill: var(--pfe-toast__close--svg--Fill);
      height: var(--pfe-toast__close--svg--Height);
      width: var(--pfe-toast__close--svg--Width);
    }
    
    &:hover {
      & > svg {
        fill: var(--pfe-toast__close--svg--hover--Fill);
      }
    }
  }
}