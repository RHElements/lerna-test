/// Map deep get
/// @author Hugo Giraudel
/// @access public
/// @param {Map} $map - Map
/// @param {Arglist} $keys - Key chain
/// @return {*} - Desired value
@function map-deep-get($map, $keys...) {
    @each $key in $keys {
        @if type-of($map)=="map" {
            $map: map-get($map, $key);
        }

        @else {
            @warn "Map provided is not a map."
        }
    }

    @return $map;
}

// Collect all maps and merge them together
@function map-collect($maps...) {
    $collection: ();

    @each $map in $maps {
        $collection: map-merge($collection, $map);
    }

    @return $collection;
}

// https://hugogiraudel.com/2013/08/08/advanced-sass-list-functions/
// Get the first item in a list
@function first($list) {
    @return nth($list, 1);
}

// Get the last item in a list
@function last($list) {
    @return nth($list, length($list));
}

// https://hugogiraudel.com/2013/08/08/advanced-sass-list-functions/#removing-values-from-list
@function remove($list, $value, $recursive: false) {
    $result: ();

    @for $i from 1 through length($list) {
        @if type-of(nth($list, $i))==list and $recursive {
            $result: append($result, remove(nth($list, $i), $value, $recursive));
        }

        @else if nth($list, $i) !=$value {
            $result: append($result, nth($list, $i));
        }
    }

    @return $result;
}