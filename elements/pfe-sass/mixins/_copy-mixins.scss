@mixin pfe-accessibility-focus( $color: $link-color ) {
    outline-offset: 1px;
    outline-style: dotted;
    outline-width: 1px;
    //scss-lint:disable ImportantRule
    text-decoration: none !important;
    @if type-of( $color ) == color {
        outline-color: $color;
    }
}

@mixin pfe-underline( $color: default-link-hover-line, $opacity: 1 ) {
    text-decoration: underline;
    text-decoration-skip: ink;
}


/// ===========================================================================
/// TYPOGRAPHY MIXIN for component use
///
/// This mixin allows you to request all typography styles with optional 
/// hooks for local variables. Note that the default type is "title", because
/// most text won't need typographical styles, it will inherit from the root.
/// 
/// USAGE:
///
/// .custom-heading {
///   @include pfe-typography;
/// }
/// .text {
///   @include pfe-typography($type: text);
/// }
/// .my-jump-links-component-class {
///   @include pfe-typography("5xl");
/// }
/// .custom-heading-6xl {
///   @include pfe-typography($size: "6xl", $type: "mega-title");
/// }
/// .custom-heading-6xl-without-local {
///   @include pfe-typography($size: "6xl", $use-local: false, $type: "mega-title");
/// }
/// .custom-heading-6xl-without-local-with-region {
///   @include pfe-typography($size: "6xl", $use-local: false, $region: "heading", $type: "mega-title");
/// }
/// .custom-heading-6xl-with-light-dom-hook {
///   @include pfe-typography($size: "6xl", $light-dom-heading: true);
/// }
///
/// For more information about --pf-c--FontSize, see the HTML HEADINGS section in pfe-base.scss

@mixin pfe-typography(
    $size: "2xl", 
    $use-local: true,
    $region: null,
    $type: "title",
    $light-dom-heading: false,
    ) {
    @if $type == "text" {
        @if $region  {
            @if $light-dom-heading == true {
              --pf-c--FontSize: #{pfe-local(FontSize, $region: heading)};
            }
            font-family: pfe-var(font-family );
            font-size:   pfe-local( FontSize, pfe-var(#{FontSize--}#{to-string( $size ) }), $region);
            line-height: pfe-local( LineHeight, pfe-var(line-height), $region );
            font-weight: pfe-local( FontWeight, pfe-var(font-weight--light), $region ); 
        }
        @else if $use-local {
            @if $light-dom-heading == true {
                --pf-c--FontSize: #{pfe-local(FontSize)};
            }
            font-family: pfe-var(font-family );
            font-size:   pfe-local( FontSize, pfe-var(#{FontSize--}#{to-string( $size ) }) );
            line-height: pfe-local( LineHeight, pfe-var(line-height) );
            font-weight: pfe-local( FontWeight, pfe-var(font-weight--light) ); 
        } @else {
            @if $light-dom-heading == true {
                --pf-c--FontSize: #{ pfe-var(#{FontSize--}#{to-string( $size ) }) };
            }
            font-family: pfe-var(font-family );
            font-size:   pfe-var(#{FontSize--}#{to-string( $size ) });
            line-height: pfe-var(line-height);
            font-weight: pfe-var(font-weight--light);
            
        }
    } 
    @if $type == "mega-title" {
        @if $region  {
            @if $light-dom-heading == true {
              --pf-c--FontSize: #{pfe-local(FontSize, $region: heading)};
            }
            font-family: pfe-var(font-family--heading );
            font-size:   pfe-local( FontSize, pfe-var(#{FontSize--}#{to-string( $size ) }), $region);
            line-height: pfe-local( LineHeight, pfe-var(line-height--heading), $region );
            font-weight: pfe-local( FontWeight, pfe-var(font-weight--light), $region ); 
        }
        @else if $use-local {
            @if $light-dom-heading == true {
              --pf-c--FontSize: #{pfe-local(FontSize)};
            }
            font-family: pfe-var(font-family--heading );
            font-size:   pfe-local( FontSize, pfe-var(#{FontSize--}#{to-string( $size ) }) );
            line-height: pfe-local( LineHeight, pfe-var(line-height--heading) );
            font-weight: pfe-local( FontWeight, pfe-var(font-weight--light) ); 
        } @else {
            @if $light-dom-heading == true {
              --pf-c--FontSize: #{ pfe-var(#{FontSize--}#{to-string( $size ) }) };
            }
            font-family: pfe-var(font-family--heading );
            font-size:   pfe-var(#{FontSize--}#{to-string( $size ) });
            line-height: pfe-var(line-height--heading);
            font-weight: pfe-var(font-weight--light);
        }
    } 
    // Regular title
    @else {
        @if $region  {
            @if $light-dom-heading == true {
              --pf-c--FontSize: #{pfe-local(FontSize, $region: heading)};
            }
            font-family: pfe-var(font-family--heading );
            font-size:   pfe-local( FontSize, pfe-var(#{FontSize--}#{to-string( $size ) }), $region);
            line-height: pfe-local( LineHeight, pfe-var(line-height--heading), $region );
            font-weight: pfe-local( FontWeight, pfe-var(font-weight--normal), $region ); 
        }
        @else if $use-local {
            @if $light-dom-heading == true {
              --pf-c--FontSize: #{pfe-local(FontSize)};
            }
            font-family: pfe-var(font-family--heading );
            font-size:   pfe-local( FontSize, pfe-var(#{FontSize--}#{to-string( $size ) }) );
            line-height: pfe-local( LineHeight, pfe-var(line-height--heading) );
            font-weight: pfe-local( FontWeight, pfe-var(font-weight--normal) ); 
        } @else {
            @if $light-dom-heading == true {
              --pf-c--FontSize: #{ pfe-var(#{FontSize--}#{to-string( $size ) }) };
            }
            font-family: pfe-var(font-family--heading );
            font-size:   pfe-var(#{FontSize--}#{to-string( $size ) });
            line-height: pfe-var(line-height--heading);
            font-weight: pfe-var(font-weight--normal);
        }
    } 
}
