/// ===========================================================================
/// Accordion Specific SASS Vars
/// ===========================================================================

@mixin pfe-trigger-props($align: left) {
    // -webkit-appearance: button;
    margin: 0;
    width: 100%;
    height: auto;
    font-family: inherit;
    font-weight: #{pfe-var(font-weight--bold)};
    text-align: left;
    cursor: pointer;
    z-index: 1;
    position: relative;

    font-size:   calc(#{pfe-var(font-size)} * 1.1);
    line-height: #{pfe-var(line-height)};

    color:            #{pfe-local(aux)};
    background-color: #{pfe-local(main)};
    border-left:      #{pfe-local(BorderLeft)};
    border-right:     #{pfe-local(BorderRight)};
    border-bottom:    #{pfe-local(BorderBottom)};
    border-top:       #{pfe-local($cssvar: BorderBottom, $fallback: 0)};

    &:hover {
        outline: none;
        border-left-color: #{pfe-local(BorderLeftColor--focus)};
        z-index: 2;
    }

    &:focus {
        outline: none;
        z-index: 2;
        text-decoration: underline;
    }

    &::-moz-focus-inner {
        border: 0;
    }

    @if $align == right {
        padding: #{pfe-var(container-spacer)} calc(#{pfe-var(container-spacer)} * 1.5) #{pfe-var(container-spacer)} 50px !important;
    } @else {
        padding: #{pfe-var(container-spacer)} 50px #{pfe-var(container-spacer)} calc(#{pfe-var(container-spacer)} * 1.5) !important;
    }
}

@mixin pfe-trigger-last($theme: light) {
  $border-bottom-color: #{pfe-color(surface--border)};
  @if $theme == dark {
    $border-bottom-color: #{pfe-color(surface--border--darkest)};
  }

  $variables: (
    BorderTop: 0,
    BorderBottom: #{pfe-var(surface--border-width) pfe-var(surface--border-style) $border-bottom-color}
  );

  @include pfe-set-local($variables);
}

@mixin pfe-trigger-first($theme: light) {
  $border-top-color: #{pfe-color(surface--border)};
  @if $theme == dark {
    $border-top-color: #{pfe-color(surface--border--darkest)};
  }

  @include pfe-set-local((
    BorderTop: #{pfe-var(surface--border-width) pfe-var(surface--border-style) $border-top-color}
  ));
}

@mixin pfe-trigger-expanded($component-name: $LOCAL) {
    --pfe-#{$component-name}--BorderBottom: 0;
}

@mixin pfe-trigger-color($component-name: $LOCAL, $state: default, $theme: light) {
  @if $theme == dark {
    @if $state == expanded {
      --pfe-#{$component-name}--main:         #{pfe-color(surface--darker)};
      --pfe-#{$component-name}--aux:          #{pfe-color(surface--darkest--text)};
      --pfe-#{$component-name}--BorderLeft:   #{pfe-var(surface--border-width--heavy)} #{pfe-var(surface--border-style)} #{pfe-color(surface--border)};
      --pfe-#{$component-name}--BorderRight:  #{pfe-var(surface--border-width)} #{pfe-var(surface--border-style)} #{pfe-color(surface--border)};

      --pfe-#{$component-name}--BorderLeftColor--focus: #{pfe-color(surface--lightest)};
    }
    @else {
      --pfe-#{$component-name}--main:         transparent;
      --pfe-#{$component-name}--aux:          #{pfe-color(surface--darkest--text)};
      --pfe-#{$component-name}--BorderLeftColor--focus: #{pfe-color(surface--lightest)};
    }
  }
  @else {
    @if $state == expanded {
      --pfe-#{$component-name}--main:              #{pfe-color(surface--lightest)};
      --pfe-#{$component-name}--aux:               #{pfe-color(surface--lightest--text)};
      --pfe-#{$component-name}--focus:             #{pfe-color(surface--lightest--link)};
      --pfe-#{$component-name}--BorderLeft:        #{pfe-var(surface--border-width--heavy)} #{pfe-var(surface--border-style)} #{pfe-color(surface--lightest--link)};
      --pfe-#{$component-name}--BorderRight:       #{pfe-var(surface--border-width)} #{pfe-var(surface--border-style)} #{pfe-color(surface--border)};
    }
    @else {
      --pfe-#{$component-name}--main:         transparent;
      --pfe-#{$component-name}--aux:          #{pfe-color(surface--lightest--text)};

      --pfe-#{$component-name}--BorderLeft:  #{pfe-var(surface--border-width--heavy)} #{pfe-var(surface--border-style)} transparent;
      --pfe-#{$component-name}--BorderRight: #{pfe-var(surface--border-width)} #{pfe-var(surface--border-style)} transparent;
      --pfe-#{$component-name}--BorderBottom: #{pfe-var(surface--border-width)} #{pfe-var(surface--border-style)} #{pfe-color(surface--border)};

      --pfe-#{$component-name}--BorderLeftColor--focus: #{pfe-color(surface--lightest--link)};
    }
  }
}

/// ===========================================================================
/// Accordion chevrons
/// ===========================================================================

@mixin pfe-chevron-expanded($state: true, $position: after, $size: .4em) {
  content: "";
  position: absolute;
  top: calc((#{pfe-var(container-spacer)} * .75) + #{$size});
  display: block;
  border-style: #{pfe-var(surface--border-style)};
  height: #{$size};
  width:  #{$size};
  text-align: center;
  transition: transform 0.15s;
  @if $state {
    border-width: .1em .1em 0 0;
    border-bottom: 0;
    transform: rotate(-45deg);
    @if $position == before {
      left: calc(#{pfe-var(container-spacer)} * 1.5);
    }
    @else {
      right: calc(#{pfe-var(container-spacer)} * 1.5);
    }
  }
  @else {
    border-width: 0 .1em .1em 0;
    transform: rotate(45deg);
    @if $position == before {
      left: calc(#{pfe-var(container-spacer)} * 1.5);
    }
    @else {
      right: calc(#{pfe-var(container-spacer)} * 1.5);
    }
  }
}

/// ===========================================================================
/// Accordion panel
/// ===========================================================================

@mixin pfe-container {
  position: relative;
  display: block;
  width: 100%;

  padding: calc(#{pfe-local(Padding--vertical)} / 2)  #{pfe-local(Padding--horizontal)};

  @media (min-width: #{pfe-breakpoint(sm)}) {
     padding: #{pfe-local(Padding)};
  }
}

@mixin pfe-accordion-panel {
  display: none;
  overflow: hidden;
  will-change: height;
  border-color: transparent;
  opacity: 0;
}

@mixin pfe-accordion-panel-expanded {
  display: block;
  position: relative;
  opacity: 1;
}

@mixin pfe-accordion-panel-expanded-style($theme: light) {
  border-right: #{pfe-var(surface--border-width)} #{pfe-var(surface--border-style)} transparent;
  border-left: #{pfe-var(surface--border-width--heavy)} #{pfe-var(surface--border-style)} transparent;
  @if $theme == dark {
    box-shadow: none;
    background-color: #{pfe-color(surface--darker)};
    border-left-color: #{pfe-color(surface--border)};
    border-right-color: #{pfe-color(surface--border)};
  }
  @else {
    box-shadow: 0 5px #{pfe-var(surface--border-width--heavy)} rgba(140, 140, 140, 0.35);
    border-left-color: #{pfe-color(surface--lightest--link)};
    background-color: #{pfe-color(surface--lightest)};
    border-right-color: #{pfe-color(surface--border)};
    border-bottom: #{pfe-var(surface--border-width)} #{pfe-var(surface--border-style)} #{pfe-color(surface--border)};
  }
}

@mixin pfe-accordion-panel-container-inset($align: left)  {
  box-sizing: border-box;
  width: 100%;

  @if $align == left {
    padding: 0 3em #{pfe-var(container-spacer)} calc(#{pfe-var(container-spacer)} * 1.5);
  }
  @else {
    padding: 0 calc(#{pfe-var(container-spacer)} * 1.5) #{pfe-var(container-spacer)} 3em;
  }
}