@import "../../rh-sass/rh-sass";


/// ===========================================================================
/// Component Specific SASS Vars
/// ===========================================================================

// Todo: convert these also
$rh-icon--size:                             1em;
$rh-icon--padding:                          .05em;
$rh-icon--border-width:                     map-get($rh-vars, border-width);
$rh-icon--border-style:                     map-get($rh-vars, border-style);


/// ===========================================================================
/// DEFUALT CTA
/// ===========================================================================

@mixin rh-icon-set-svg-size($size: 1em) {
  &,
  & svg {
    width: $size;
    height: $size;
  }
}

:host {
  --rh-icon--spacing:                 #{rh-var(container-spacer)};
  --rh-icon--size:                    var(--rh-theme--icon-size, 1em);
  --rh-icon--color--bg:               transparent;
  --rh-icon--color--border:           transparent;

  display: inline-block;
  vertical-align: middle;
  @include rh-icon-set-svg-size(1em);
  border-radius: 50%;
  background: var(--rh-icon--color--bg);
  border: $rh-icon--border-width $rh-icon--border-style var(--rh-icon--color--border);

  svg {
    fill: var(--rh-broadcasted--color--text);
  }

  @at-root #{&}([data-block]) {
    display: block;
    margin-bottom: var(--rh-icon--spacing);
    margin-top: var(--rh-icon--spacing);

    &:first-child {
      margin-top: 0;
    }
  }
}

:host([size="2x"]) {
  @include rh-icon-set-svg-size(2em);
}

:host([size="3x"]) {
  @include rh-icon-set-svg-size(3em);
}

:host([size="4x"]) {
  @include rh-icon-set-svg-size(4em);
}

// TODO: Sort out sizing
:host([size="xl"]) {
  @include rh-icon-set-svg-size(100px);
}

:host([size="lg"]) {
  @include rh-icon-set-svg-size(64px);
}

:host([size="md"]) {
  @include rh-icon-set-svg-size(32px);
}

:host([size="sm"]) {
  @include rh-icon-set-svg-size(14px);
}

:host([color="base"]) {
  --rh-broadcasted--color--text:      #{rh-color(ui-base)};
}

:host([color="complement"]) {
  --rh-broadcasted--color--text:      #{rh-color(ui-complement)};
}

:host([color="accent"]) {
  --rh-broadcasted--color--text:      #{rh-color(ui-accent)};
}

:host([color="critical"]) {
  --rh-broadcasted--color--text:      #{rh-color(feedback--critical)};
}

:host([color="important"]) {
  --rh-broadcasted--color--text:      #{rh-color(feedback--important)};
}

:host([color="moderate"]) {
  --rh-broadcasted--color--text:      #{rh-color(feedback--moderate)};
}

:host([color="success"]) {
  --rh-broadcasted--color--text:      #{rh-color(feedback--success)};
}

:host([color="info"]) {
  --rh-broadcasted--color--text:      #{rh-color(feedback--info)};
}

:host([color="default"]) {
  --rh-broadcasted--color--text:      #{rh-color(feedback--default)};
}

// May need Feedback Darkest colors too.

:host([circled]) {
  --rh-icon--color--bg:               transparent;
  --rh-icon--color--border:           #{rh-color(surface--border)};

  padding: $rh-icon--padding;
}

:host([circled="base"]) {
  --rh-icon--color--bg:               #{rh-color(surface--base)};
  --rh-icon--color--border:           transparent;
  --rh-broadcasted--color--text:      #{rh-color(surface--base--text)};
}

:host([circled="lightest"]) {
  --rh-icon--color--bg:               #{rh-color(surface--lightest)};
  --rh-icon--color--border:           transparent;
  --rh-broadcasted--color--text:      #{rh-color(surface--lightest--text)};
}

:host([circled="light"]) {
  --rh-icon--color--bg:               #{rh-color(surface--lighter)};
  --rh-icon--color--border:           transparent;
  --rh-broadcasted--color--text:      #{rh-color(surface--lighter--text)};
}

:host([circled="dark"]) {
  --rh-icon--color--bg:               #{rh-color(surface--darker)};
  --rh-icon--color--border:           transparent;
  --rh-broadcasted--color--text:      #{rh-color(surface--darker--text)};
}

:host([circled="darkest"]) {
  --rh-icon--color--bg:               #{rh-color(surface--darkest)};
  --rh-icon--color--border:           transparent;
  --rh-broadcasted--color--text:      #{rh-color(surface--darkest--text)};
}

:host([circled="complement"]) {
  --rh-icon--color--bg:               #{rh-color(surface--complement)};
  --rh-icon--color--border:           transparent;
  --rh-broadcasted--color--text:      #{rh-color(surface--complement--text)};
}

:host([circled="accent"]) {
  --rh-icon--color--bg:               #{rh-color(surface--accent)};
  --rh-icon--color--border:           transparent;
  --rh-broadcasted--color--text:      #{rh-color(surface--accent--text)};
}
